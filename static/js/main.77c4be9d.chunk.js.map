{"version":3,"sources":["GlobalsAndContext.js","components/MenuData.js","components/SubMenu.js","components/Sidebar.js","components/SharedComponents.js","components/Fret.js","components/FretRow.js","components/Inlay.js","components/InlayRow.js","components/Fretboard.js","pages/StringTheory.js","pages/About.js","pages/PageNotFound.js","App.js","reportWebVitals.js","index.js"],"names":["mapNoteToNumber","note","trim","length","root","toUpperCase","charAt","toLowerCase","mapNumberToNote","accidental","Error","majorScale","map","offset","defaultTuning","e","validPages","GlobalContext","React","createContext","updateSingleItem","list","index","Array","fill","menuData","context","title","icon","iconClosed","iconOpened","page","subNav","action","choice","updateMode","updateList","tuning","mode","editable","updateTuning","input","substring","slice","info","setTuning","difference","noteSet","newVals","updateRoot","updateNoteSet","selection","scale","includes","minorScale","setting","updateLefty","lefty","updateInlays","updateFretNumbers","newList","path","SidebarLink","styled","Link","SidebarPanel","div","DropdownLink","props","selected","SidebarLabel","span","Submenu","state","showSubNavigation","this","item","setState","to","onClick","updateSidebar","subItem","contentEditable","spellCheck","onBlur","currentTarget","textContent","onKeyDown","code","blur","Component","contextType","Nav","NavIcon","SidebarNav","nav","visible","SidebarWrap","Sidebar","useLocation","pathname","useContext","sidebar","showSidebar","show","Provider","value","color","GuitarRow","Nut","hideNut","Body","Page","Fret","Box","fret","text","FretRow","frets","i","rootNote","push","splice","reverse","Inlay","style","fontSize","Dot","padding","display","backgroundColor","borderRadius","InlayRow","Fretboard","Board","overflow","marginTop","inlays","fretNumbers","StringTheory","href","target","rel","margin","Text","p","About","textAlign","marginBottom","PageNotFound","App","stringNumber","ReactGA","initialize","pageview","window","location","search","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77c4be9d.chunk.js","sourcesContent":["import React from 'react';\r\n/*\r\n    Notes can be represented as such\r\n    0: G# / Ab\r\n    1: A\r\n    2: A# / Bb\r\n    3: B\r\n    4: C\r\n    5: C# / Db\r\n    6: D\r\n    7: D# / Eb\r\n    8: E\r\n    9: F\r\n   10: F# / Gb\r\n   11: G\r\n   12: G# / Ab <-- Octave\r\n\r\n    So there are 12 unique notes, represented by the numbers [0,11].\r\n    This allows for easy maths using the modulo operator to read a note's\r\n    profile regardless of a note's octave\r\n\r\n*/\r\n\r\n/**\r\n * Maps a letter representation of a musical note (as a String)\r\n * to a integer value. Accepts natural notes, and notes followed\r\n * by a # or b accidental for sharp and flat\r\n * resepctively.\r\n *\r\n */\r\nexport function mapNoteToNumber(note) {\r\n  note = note.trim();\r\n  // Error trap invalid input\r\n  if (typeof note !== 'string' || note.length === 0 || note.length > 2) {\r\n    return -1;\r\n  }\r\n\r\n  // Get root note before flats/sharps are applied\r\n  let root = null;\r\n  switch (note.toUpperCase().charAt(0)) {\r\n    case 'A':\r\n      root = 1;\r\n      break;\r\n    case 'B':\r\n      root = 3;\r\n      break;\r\n    case 'C':\r\n      root = 4;\r\n      break;\r\n    case 'D':\r\n      root = 6;\r\n      break;\r\n    case 'E':\r\n      root = 8;\r\n      break;\r\n    case 'F':\r\n      root = 9;\r\n      break;\r\n    case 'G':\r\n      root = 11;\r\n      break;\r\n    default:\r\n      return -2;\r\n  }\r\n\r\n  // If note contains accidental in second character, apply sharp/flat logic\r\n  if (note.length === 2) {\r\n    switch (note.toLowerCase().charAt(1)) {\r\n      case '#':\r\n      case 's':\r\n        root += 1;\r\n        break;\r\n      case 'b':\r\n        root -= 1;\r\n        break;\r\n      default:\r\n        return -3;\r\n    }\r\n  }\r\n\r\n  return root % 12;\r\n}\r\n\r\n/**\r\n * Maps a numerical representation of a musical note to a String representation\r\n * consisting of a root and an accidental of # or b if applicable for a sharp or\r\n * flat note\r\n *\r\n */\r\nexport function mapNumberToNote(note, accidental) {\r\n  // Wrap notes around chromatic octave before continuing\r\n  note = note % 12;\r\n\r\n  // Trap errors\r\n  if (typeof note !== 'number') {\r\n    throw new Error('Invalid input: must be number');\r\n  }\r\n  switch (note) {\r\n    case 0:\r\n      return accidental === 'Flats' ? 'Ab' : 'G#';\r\n    case 1:\r\n      return 'A';\r\n    case 2:\r\n      return accidental === 'Flats' ? 'Bb' : 'A#';\r\n    case 3:\r\n      return 'B';\r\n    case 4:\r\n      return 'C';\r\n    case 5:\r\n      return accidental === 'Flats' ? 'Db' : 'C#';\r\n    case 6:\r\n      return 'D';\r\n    case 7:\r\n      return accidental === 'Flats' ? 'Eb' : 'D#';\r\n    case 8:\r\n      return 'E';\r\n    case 9:\r\n      return 'F';\r\n    case 10:\r\n      return accidental === 'Flats' ? 'Gb' : 'F#';\r\n    case 11:\r\n      return 'G';\r\n    default:\r\n      throw new Error('Unable to map note to numerical value');\r\n  }\r\n}\r\n\r\nexport const defaultRoot = 1; // Note = 1 = A\r\nexport const majorScale = (root) =>\r\n  [0, 2, 4, 5, 7, 9, 11].map((offset) => (offset + root) % 12);\r\nexport const minorScale = (root) =>\r\n  [0, 2, 3, 5, 7, 8, 10].map((offset) => (offset + root) % 12);\r\n\r\n// Tuning should always be calculated numerically and never lexigraphically.\r\n// This allows for dynamic switching between equivalent sharp/flats when\r\n// global context changes.\r\nexport const defaultTuningArray = ['E', 'B', 'G', 'D', 'A', 'E'];\r\nexport const defaultTuning = defaultTuningArray.map((e) => mapNoteToNumber(e));\r\n\r\n// Frets displayed, and scale factor by which they shrink in size\r\nexport const fretCount = 21;\r\nexport const shrinkFactor = 5;\r\n\r\n// So as to hide sidebar when 404'ing\r\nexport const validPages = ['/', '/About/'];\r\n\r\nexport const GlobalContext = React.createContext();\r\nexport default GlobalContext;\r\n","import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as IoIcons from 'react-icons/io5';\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as GiIcons from 'react-icons/gi';\r\nimport * as CgIcons from 'react-icons/cg';\r\nimport {\r\n  mapNoteToNumber, mapNumberToNote, majorScale, minorScale,\r\n} from '../GlobalsAndContext';\r\n\r\n/**\r\n  Returns a boolean array of same length as\r\n  input list containing all falses, but with\r\n  a true at index of second parameter\r\n*/\r\nfunction updateSingleItem(list, index) {\r\n  list = new Array(list.length).fill(false);\r\n  list[index] = true;\r\n  return list;\r\n}\r\n\r\nexport const menuData = (context) => [\r\n  {\r\n    title: 'Sharp/Flat Mode',\r\n    icon: <FaIcons.FaSlidersH />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n    page: '/',\r\n    subNav: [\r\n      {\r\n        title: 'Sharps',\r\n        icon: <FaIcons.FaHashtag />,\r\n      },\r\n      {\r\n        title: 'Flats',\r\n        icon: <CgIcons.CgTrendingDown />,\r\n      },\r\n    ],\r\n    action: (choice) => context.updateMode(choice.title),\r\n    updateList: (list, index) => updateSingleItem(list, index),\r\n  },\r\n  {\r\n    title: 'Custom Tuning',\r\n    icon: <FaIcons.FaGuitar />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n    page: '/',\r\n    subNav: [\r\n      {\r\n        title: mapNumberToNote(context.tuning[0], context.mode),\r\n        icon: <GiIcons.GiTunePitch />,\r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n        subNav: [\r\n          {\r\n            title: 'inner level',\r\n            icon: <FaIcons.FaGuitar />,\r\n          },\r\n          {\r\n            title: 'inner level',\r\n            icon: <FaIcons.FaGuitar />,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: mapNumberToNote(context.tuning[1], context.mode),\r\n        icon: <GiIcons.GiTunePitch />,\r\n      },\r\n      {\r\n        title: mapNumberToNote(context.tuning[2], context.mode),\r\n        icon: <GiIcons.GiTunePitch />,\r\n      },\r\n      {\r\n        title: mapNumberToNote(context.tuning[3], context.mode),\r\n        icon: <GiIcons.GiTunePitch />,\r\n      },\r\n      {\r\n        title: mapNumberToNote(context.tuning[4], context.mode),\r\n        icon: <GiIcons.GiTunePitch />,\r\n      },\r\n      {\r\n        title: mapNumberToNote(context.tuning[5], context.mode),\r\n        icon: <GiIcons.GiTunePitch />,\r\n      },\r\n    ],\r\n    editable: true,\r\n    action: () => { },\r\n    updateList: (list) => list,\r\n    updateTuning: (input, index) => {\r\n      input = input.trim().toLowerCase();\r\n      if (input.length < 1) return false;\r\n      if (input.length > 2) input = input.substring(0, 2);\r\n\r\n      input = input.toUpperCase().charAt(0) + input.slice(1);\r\n      const note = mapNoteToNumber(input);\r\n      if (note < 0) return false;\r\n\r\n      // Input is determined to be valid at this point.\r\n      // Must update context's tuning so fretboard can update.\r\n      context.updateTuning(index, note);\r\n      return input;\r\n    },\r\n  },\r\n  {\r\n    title: 'Tuning Presets',\r\n    icon: <FaIcons.FaUserCog />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n    page: '/',\r\n    subNav: [\r\n      {\r\n        title: 'Standard',\r\n        tuning: ['E', 'B', 'G', 'D', 'A', 'E'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'Open G',\r\n        tuning: ['D', 'B', 'G', 'D', 'G', 'D'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'Open D',\r\n        tuning: ['D', 'A', 'F#', 'D', 'A', 'D'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'Drop D',\r\n        tuning: ['E', 'B', 'G', 'D', 'A', 'D'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'Drop C',\r\n        tuning: ['E', 'B', 'G', 'D', 'A', 'C'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'E C G C A C\\n(Mumford & Sons)',\r\n        tuning: ['E', 'C', 'G', 'C', 'A', 'C'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'E C G C A F\\n(American Football)',\r\n        tuning: ['E', 'C', 'G', 'C', 'A', 'F'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'E A G C A F\\n(Yvette Young)',\r\n        tuning: ['E', 'A', 'G', 'C', 'A', 'F'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n    ],\r\n    action: (info) =>context.setTuning(\r\n        info.tuning.map((e) => mapNoteToNumber(e))\r\n    ),\r\n    updateList: (list, index) => updateSingleItem(list, index),\r\n  },\r\n  {\r\n    title: 'Root Note / Key',\r\n    icon: <FaIcons.FaSortAlphaDown />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n    page: '/',\r\n    subNav: [\r\n      {\r\n        title: 'A',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: context.mode === 'Sharps' ? 'A#' : 'Bb',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: 'B',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: 'C',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: context.mode === 'Sharps' ? 'C#' : 'Db',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: 'D',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: context.mode === 'Sharps' ? 'D#' : 'Eb',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: 'E',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: 'F',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: context.mode === 'Sharps' ? 'F#' : 'Gb',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: 'G',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: context.mode === 'Sharps' ? 'G#' : 'Ab',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n    ],\r\n    action: (root) => {\r\n      root = root.title;\r\n      // Two-part approach: update root, but also recalculate\r\n      // the selected set of notes with relation to new root\r\n      const note = mapNoteToNumber(root);\r\n      const difference = context.noteSet[0] - note;\r\n      const newVals = context.noteSet.map((e) => (e - difference + 12) % 12);\r\n\r\n      context.updateRoot(note);\r\n      context.updateNoteSet(newVals);\r\n    },\r\n    updateList: (list, index) => updateSingleItem(list, index),\r\n  },\r\n  {\r\n    title: 'Pattern Type',\r\n    icon: <FaIcons.FaWrench />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n    page: '/',\r\n    subNav: [\r\n      {\r\n        title: 'Natural Major',\r\n        icon: <IoIcons.IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Natural Minor',\r\n        icon: <IoIcons.IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Major Pentatonic',\r\n        icon: <IoIcons.IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Minor Pentatonic',\r\n        icon: <IoIcons.IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Major',\r\n        icon: <IoIcons.IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Major 7',\r\n        icon: <IoIcons.IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Minor',\r\n        icon: <IoIcons.IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Minor 7',\r\n        icon: <IoIcons.IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Dominant 7',\r\n        icon: <IoIcons.IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Augmented',\r\n        icon: <IoIcons.IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Diminished',\r\n        icon: <IoIcons.IoNewspaper />,\r\n      },\r\n    ],\r\n    action: (selection) => {\r\n      const {root} = context;\r\n      // Note that only minor chords derived from minor scale.\r\n      // Dim/Aug/Dom chords to be derived from major scale\r\n      const scale = selection.title.includes('Minor') ?\r\n          minorScale(root) : majorScale(root);\r\n\r\n      // Assemble set of notes from scale degreees\r\n      const noteSet = () => {\r\n        switch (selection.title) {\r\n          case 'Major Pentatonic':\r\n          case 'Minor Pentatonic':\r\n            // Pentatonic is scale with 4 & 7 degree's ommitted\r\n            return [scale[0], scale[1], scale[2], scale[4], scale[5]];\r\n          case 'Major':\r\n          case 'Minor':\r\n            // Major/minor chords are 1/3/5 of-0 indexed scale\r\n            return [scale[0], scale[2], scale[4]];\r\n          case 'Major 7':\r\n          case 'Minor 7':\r\n            return [scale[0], scale[2], scale[4], scale[6]];\r\n          case 'Dominant 7':\r\n            // Exploiting that dominant7 is Maj7b5 in jazz notation\r\n            return [scale[0], scale[2], scale[4], scale[6] - 1];\r\n          case 'Augmented':\r\n            return [scale[0], scale[2], scale[4] + 1];\r\n          case 'Diminished':\r\n            return [scale[0], scale[2] - 1, scale[4] - 1];\r\n          case 'Natural Major':\r\n          case 'Natural Minor':\r\n          default:\r\n            return scale;\r\n        }\r\n      };\r\n      return context.updateNoteSet(noteSet());\r\n    },\r\n    updateList: (list, index) => updateSingleItem(list, index),\r\n  },\r\n  {\r\n    title: 'Settings',\r\n    icon: <FaIcons.FaCog />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n    page: '/',\r\n    subNav: [\r\n      {\r\n        title: 'Dots / Fret Numbers',\r\n        icon: <FaIcons.FaClipboardList />,\r\n      },\r\n      {\r\n        title: 'Dot Inlays',\r\n        icon: <FaIcons.FaClipboardList />,\r\n      },\r\n      {\r\n        title: 'Fret Numbers',\r\n        icon: <FaIcons.FaClipboardList />,\r\n      },\r\n      {\r\n        title: 'Nothing',\r\n        icon: <FaIcons.FaClipboardList />,\r\n      },\r\n      {\r\n        title: 'Left Handed',\r\n        icon: <FaIcons.FaClipboardList />,\r\n      },\r\n    ],\r\n    action: (setting) => {\r\n      const {title} = setting;\r\n      if (title.includes('Handed')) context.updateLefty(!context.lefty);\r\n      else {\r\n        context.updateInlays(title.includes('Dot'));\r\n        context.updateFretNumbers(title.includes('Numbers'));\r\n      }\r\n    },\r\n    updateList: (list, index, title) => {\r\n      const newList = list.slice();\r\n      // Preserve other list options if changing handed-ness setting\r\n      if (title.includes('Handed')) {\r\n        newList[index] = !list[index];\r\n      } else {\r\n        newList.fill(false);\r\n        newList[index] = true;\r\n        // Must preserve handed-ness setting when changing other options\r\n        newList[newList.length - 1] = list[list.length - 1];\r\n      }\r\n      return newList;\r\n    },\r\n  },\r\n  {\r\n    title: 'Project Info',\r\n    icon: <IoIcons.IoHelpCircle />,\r\n    path: '/About/',\r\n    page: '/',\r\n    subNav: [],\r\n  },\r\n  {\r\n    title: 'String Theory',\r\n    icon: <FaIcons.FaGuitar />,\r\n    path: '',\r\n    page: '/About/',\r\n    subNav: [],\r\n  },\r\n];\r\nexport default menuData;\r\n","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport {GlobalContext} from '../GlobalsAndContext';\r\n\r\n// Top level item in menu\r\nconst SidebarLink = styled(Link)`\r\n  display: flex;\r\n  color: #e1e9fc;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  list-style: none;\r\n  height: 55px;\r\n  text-decoration: none;\r\n  font-size: 18px;\r\n\r\n  &:hover {\r\n    background: #252831;\r\n    border-left: 4px solid #632ce4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n// Holds secondary level choices\r\nconst SidebarPanel = styled.div`\r\n  overflow-y: auto;\r\n  max-height: 50vh;\r\n`;\r\n\r\n// Secondary level options\r\nconst DropdownLink = styled.div`\r\n  background: ${(props) => (props.selected ? '#632ce4;' : '#414757;')} \r\n  padding-left: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: #f5f5f5;\r\n  font-size: 18px;\r\n\r\n  &:hover {\r\n    background: #632ce4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n// Text for secondary level choice options\r\nconst SidebarLabel = styled.span`\r\n  margin-left: 16px;\r\n  padding: 20px;\r\n  font-size: 16: px;\r\n`;\r\n\r\nexport default class Submenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [], // Subitems to be highlighted from item prop\r\n      showSubNavigation: false, // Whether menu choice is expanded or not\r\n    };\r\n  }\r\n\r\n  // By default, highlight first option in each menu item,\r\n  // except for tuning which has isEditable === true\r\n  componentDidMount() {\r\n    const list = new Array(this.props.item.subNav.length).fill(false);\r\n    list[0] = !this.props.item.editable;\r\n    this.setState({list});\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.props;\r\n    const forceCollapseSidebar = () => this.context.updateSidebar(false);\r\n    const showSubNavigation = () => this.setState(\r\n        {showSubNavigation: !this.state.showSubNavigation},\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <SidebarLink to={item.path}\r\n          onClick={!item.path ? showSubNavigation : forceCollapseSidebar}\r\n        >\r\n          <div>\r\n            {item.icon}\r\n            <SidebarLabel>{item.title}</SidebarLabel>\r\n          </div>\r\n          <div>\r\n            {this.state.showSubNavigation ? item.iconOpened : item.iconClosed}\r\n          </div>\r\n        </SidebarLink>\r\n        <SidebarPanel>\r\n          {this.state.showSubNavigation &&\r\n            item.subNav.map((subItem, index) => (\r\n              <DropdownLink\r\n                key={index}\r\n                selected={this.state.list[index] === true}\r\n                onClick={() => {\r\n                  item.action(subItem);\r\n                  this.setState({\r\n                    list:\r\n                      item.updateList(this.state.list, index, subItem.title),\r\n                  });\r\n                }}\r\n              >\r\n                {subItem.icon}\r\n                <SidebarLabel contentEditable={item.editable} spellCheck={false}\r\n                  onBlur={(e) => {\r\n                    e.currentTarget.textContent =\r\n                      item.updateTuning(e.currentTarget.textContent, index) ||\r\n                      subItem.title;\r\n                  }}\r\n                  onKeyDown={(e) =>\r\n                    (e.code === 'Enter' || e.code === 'Tab') &&\r\n                    (e.currentTarget.blur())}\r\n                >\r\n                  {subItem.title}\r\n                </SidebarLabel>\r\n              </DropdownLink>\r\n            ))\r\n          }\r\n        </SidebarPanel>\r\n      </ >\r\n    );\r\n  }\r\n}\r\nSubmenu.contextType = GlobalContext;\r\n","import React, {useContext} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport {IconContext} from 'react-icons/lib';\r\nimport menuData from './MenuData';\r\nimport SubMenu from './SubMenu';\r\n\r\nimport GlobalContext, {validPages} from '../GlobalsAndContext';\r\n\r\n// Black bar at top of page\r\nconst Nav = styled.div`\r\n  background: #15171c;\r\n  height: max(10vh, 75px);\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\n// Icon to expand sidebar\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\n// Sidebar sliding pane\r\nconst SidebarNav = styled.nav`\r\n  background: #15171c;\r\n  width: 19rem;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: ${(props) => (props.visible ? '0' : '-100%')};\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\n// Wrapper to hold items in sidebar\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const path = useLocation().pathname;\r\n  const context = useContext(GlobalContext);\r\n  const {sidebar} = context;\r\n  const showSidebar = (show) => context.updateSidebar(show);\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{color: '#fff'}}>\r\n        <Nav>\r\n          {validPages.includes(path) &&\r\n            <NavIcon to='#'>\r\n              <FaIcons.FaBars onClick={() => showSidebar(!sidebar)} />\r\n            </NavIcon>}\r\n        </Nav>\r\n        <SidebarNav visible={sidebar}>\r\n          <SidebarWrap>\r\n            <NavIcon to='#'>\r\n              <AiIcons.AiOutlineClose onClick={() => showSidebar(!sidebar)} />\r\n            </NavIcon>\r\n            {menuData(context).map((item, index) => (item.page === path) &&\r\n            <SubMenu item={item} key={index} />)}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import styled from 'styled-components';\r\n\r\nexport const GuitarRow = styled.div`\r\n  display: flex;\r\n  width: 75vw;\r\n  max-height: 15vh;\r\n`;\r\n\r\nexport const Nut = styled.div`\r\n  background-color: ${(props) => (props.hideNut ? 'transparent;' : '#e0955c;')}\r\n  border: 3px solid #dcdcdc;\r\n  border-radius:6px;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  width: 25px;\r\n  min-width: 10px;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  display: inline;\r\n  margin-top: 15px;\r\n  font-size: 2rem;\r\n`;\r\n\r\nexport const Page = styled.div`\r\n  display: inline-flex;\r\n  margin: 4% 15% 5% 20%;\r\n  justify-content: center;\r\n  align-content: center;\r\n  font-size: 3rem;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport default GuitarRow;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {shrinkFactor} from '../GlobalsAndContext';\r\n\r\nexport const Fret = (props) => (\r\n  <Box fret={props.fret} text={props.text}>\r\n    { props.text}\r\n  </Box >\r\n);\r\nexport default Fret;\r\n\r\nconst Box = styled.div`\r\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\r\n  background-color: ${(props) => (props.text ? '#e0ebff;' : 'transparent;')}\r\n  border-radius: 6px;\r\n  border: 3px solid #dcdcdc;\r\n  display: flex;\r\n  color: #666666;\r\n  font-family: Arial;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  height: 10vh;\r\n  min-height: 32px;\r\n  width: calc(150px - ${(props) => props.fret * shrinkFactor}px);\r\n  min-width: 30px;\r\n  text-shadow: 0px 1px 0px #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React, {useContext} from 'react';\r\nimport {mapNumberToNote, fretCount, GlobalContext} from '../GlobalsAndContext';\r\nimport {GuitarRow, Nut} from './SharedComponents';\r\nimport Fret from './Fret';\r\n\r\nexport const FretRow = (props) => {\r\n  const context = useContext(GlobalContext);\r\n  const frets = [];\r\n  for (let i = props.rootNote; i <= fretCount + props.rootNote; i += 1) {\r\n    frets.push(\r\n        <Fret\r\n          text={context.noteSet.includes(i % 12) ?\r\n            mapNumberToNote(i, context.mode) : ''}\r\n          fret={i - props.rootNote}\r\n        />\r\n    );\r\n  }\r\n\r\n  frets.splice(1, 0, <Nut />);\r\n  if (context.lefty) {\r\n    frets.reverse();\r\n  }\r\n\r\n  return (\r\n    <GuitarRow>\r\n      {frets}\r\n    </GuitarRow>\r\n  );\r\n};\r\n\r\nexport default FretRow;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {shrinkFactor} from '../GlobalsAndContext';\r\n\r\nexport const Inlay = (props) => {\r\n  // Case where there is text displayed and not dots\r\n  if (props.text) {\r\n    return (\r\n      <Box\r\n        fret={props.fret}\r\n        style={{fontSize: '15px'}}\r\n      >\r\n        {props.text}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Case of double dots on octave\r\n  if (props.fret === 12) {\r\n    return (<Box fret={props.fret}>\r\n      {\r\n        <div>\r\n          <div ><Dot /></div>\r\n          <div ><Dot /></div>\r\n        </div>\r\n      }\r\n    </Box >);\r\n  }\r\n\r\n  // Edge case where no dots on odd fret b/c 12th fret gets double dots\r\n  if (props.fret === 11 || props.fret === 13) {\r\n    return <Box fret={props.fret}></Box>;\r\n  }\r\n\r\n  // Case of single dots\r\n  if (props.fret % 2 && props.fret > 1) {\r\n    return <Box fret={props.fret}> <Dot /> </Box >;\r\n  }\r\n\r\n  // Case of no dots\r\n  return <Box fret={props.fret}> </Box>;\r\n};\r\nexport default Inlay;\r\n\r\nconst Dot = () => (\r\n  <div style={{\r\n    padding: 4,\r\n    display: 'inline-block',\r\n    backgroundColor: 'black',\r\n    borderRadius: '50%',\r\n  }} />);\r\n\r\nconst Box = styled.div`\r\n  box-shadow:inset 0px 1px 0px 0px #ffffff;\r\n  background-color: transparent;\r\n  border-radius:6px;\r\n  border:3px solid #dcdcdc;\r\n  display: flex;\r\n  color:#666666;\r\n  font-family:Arial;\r\n  font-size: 12px;\r\n  font-weight:bold;\r\n  height: 5vh;\r\n  min-height: 32px;\r\n  width: calc(150px - ${(props) => props.fret * shrinkFactor}px);\r\n  min-width: 30px;\r\n  text-shadow: 0px 1px 0px #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React, {useContext} from 'react';\r\nimport {fretCount, GlobalContext} from '../GlobalsAndContext';\r\nimport {GuitarRow, Nut} from './SharedComponents';\r\nimport Inlay from './Inlay';\r\n\r\nexport const InlayRow = (props) => {\r\n  const context = useContext(GlobalContext);\r\n  const frets = [];\r\n  for (let i = 0; i <= fretCount; i += 1) {\r\n    frets.push(<Inlay fret={i} text={props.text ? i : ''} />);\r\n  }\r\n\r\n  frets.splice(1, 0, <Nut hideNut={props.text} />);\r\n  if (context.lefty) {\r\n    frets.reverse();\r\n  }\r\n\r\n  return (\r\n    <GuitarRow>\r\n      {frets}\r\n    </GuitarRow>\r\n  );\r\n};\r\nexport default InlayRow;\r\n","import React, {useContext} from 'react';\r\nimport styled from 'styled-components';\r\nimport FretRow from './FretRow';\r\nimport InlayRow from './InlayRow';\r\nimport {GlobalContext} from '../GlobalsAndContext.js';\r\n\r\nconst Fretboard = () => {\r\n  const context = useContext(GlobalContext);\r\n  return (\r\n    <Board sidebar={context.sidebar}>\r\n      <div style={{overflow: 'auto', marginTop: '20px'}}>\r\n        <FretRow rootNote={context.tuning[0]} />\r\n        <FretRow rootNote={context.tuning[1]} />\r\n        <FretRow rootNote={context.tuning[2]} />\r\n        {context.inlays && <InlayRow />}\r\n        <FretRow rootNote={context.tuning[3]} />\r\n        <FretRow rootNote={context.tuning[4]} />\r\n        <FretRow rootNote={context.tuning[5]} />\r\n        {context.fretNumbers && <InlayRow text={true} />}\r\n      </div>\r\n    </Board >\r\n  );\r\n};\r\nexport default Fretboard;\r\n\r\nconst Board = styled.div`\r\n  ${(props) => (props.sidebar ? 'margin-left: 22vw; ' : 'margin-left: 12.5vw;')}\r\n  margin-right: 3vw;\r\n  transition: 350ms ease;\r\n`;\r\n","import React from 'react';\r\nimport Fretboard from '../components/Fretboard';\r\n\r\nexport const StringTheory = () => (<Fretboard />);\r\nexport default StringTheory;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Body, Page} from '../components/SharedComponents';\r\n\r\nconst About = () => {\r\n  return (\r\n    <Page>\r\n      <div>\r\n        <div style={{textAlign: 'center', marginBottom: '5%'}}>\r\n          <h2 >About String Theory</h2>\r\n        </div>\r\n        <Body>\r\n          <Text>\r\n            I built this program to make alternative tunings on guitar\r\n            more accessible without needing a strong music theory background.\r\n            For more information on this topic, check out the Wikipedia page for\r\n            <Link to=\"https://en.wikipedia.org/wiki/Scordatura\" text=\"Scordatura.\" />\r\n          </Text>\r\n          <Text>\r\n            This is my first project using the React framework.\r\n            You can find the source code\r\n            <Link to=\"https://github.com/Aaron-Cohen/String-Theory\" text=\"here.\" />\r\n            If you have any improvements to the source code, or notice any bugs,\r\n            please reach out to me on my\r\n            <Link to=\"https://www.linkedin.com/in/-aaroncohen/\" text=\"LinkedIn.\" />\r\n          </Text>\r\n          <Text>\r\n            Thank you for using String Theory. Happy strumming!\r\n          </Text>\r\n        </Body>\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst Link = (props) => (\r\n  <a\r\n    href={props.to}\r\n    target=\"_blank\"\r\n    rel=\"noreferrer\"\r\n    style={{display: 'inline', color: 'blue', margin: '.25em'}}\r\n  >\r\n    {props.text}\r\n  </a>\r\n);\r\n\r\nconst Text = styled.p`\r\n  margin: 33px;\r\n  line-height: 2.5rem;\r\n`;\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport * as Fa from 'react-icons/fa/';\r\nimport {Body, Page} from '../components/SharedComponents';\r\n\r\nconst PageNotFound = () => {\r\n  return (\r\n    <Page>\r\n      <div>\r\n        <div style={{textAlign: 'center', marginBottom: '5%'}}>\r\n          <h2 >Page Not Found</h2>\r\n        </div>\r\n        <Body>\r\n          <Text>\r\n            It looks like you are trying to access a page\r\n            that does not exist. Click\r\n            <Link to=\"#/\" text=\"here\" />\r\n           to return to String Theory.\r\n          </Text>\r\n          <div style={{textAlign: 'center', fontSize: '33vh'}}>\r\n            <Fa.FaRegFrown />\r\n          </div>\r\n        </Body>\r\n      </div>\r\n    </Page >\r\n  );\r\n};\r\n\r\nconst Link = (props) => (\r\n  <a\r\n    href={props.to}\r\n    style={{display: 'inline', color: 'blue', margin: '.25em'}}>\r\n    {props.text}\r\n  </a>\r\n);\r\n\r\nconst Text = styled.p`\r\n  margin: 33px;\r\n  line-height: 2.5rem;\r\n  text-align: center;\r\n`;\r\nexport default PageNotFound;\r\n","/* eslint-disable no-invalid-this */\r\nimport './App.css';\r\nimport Sidebar from './components/Sidebar';\r\nimport React, {Component} from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport StringTheory from './pages/StringTheory';\r\nimport About from './pages/About';\r\nimport PageNotFound from './pages/PageNotFound';\r\nimport {\r\n  GlobalContext,\r\n  defaultTuning,\r\n  defaultRoot,\r\n  majorScale} from './GlobalsAndContext';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    mode: 'Sharps',\r\n    root: defaultRoot,\r\n    inlays: true,\r\n    noteSet: majorScale(defaultRoot),\r\n    fretNumbers: true,\r\n    sidebar: false,\r\n    lefty: false,\r\n    tuning: defaultTuning,\r\n    updateMode: (mode) => this.setState({mode}),\r\n    updateRoot: (root) => this.setState({root}),\r\n    updateInlays: (inlays) => this.setState({inlays}),\r\n    updateNoteSet: (noteSet) => this.setState({noteSet}),\r\n    updateFretNumbers: (fretNumbers) => this.setState({fretNumbers}),\r\n    updateSidebar: (sidebar) => this.setState({sidebar}),\r\n    updateLefty: (lefty) => this.setState({lefty}),\r\n    updateTuning: (stringNumber, note) => {\r\n      const tuning = this.state.tuning.slice();\r\n      tuning[stringNumber] = note;\r\n      this.setState({tuning});\r\n    },\r\n    setTuning: (tuning) => this.setState({tuning}),\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Google analytics to track traffic\r\n    ReactGA.initialize('UA-187525938-1');\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GlobalContext.Provider value={this.state}>\r\n        <HashRouter>\r\n          <Sidebar />\r\n          <Switch>\r\n            <Route path='/' exact component={StringTheory} />\r\n            <Route path='/About/' exact component={About} />\r\n            <Route path='*' component={PageNotFound} />\r\n          </Switch>\r\n        </HashRouter>\r\n      </GlobalContext.Provider>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}