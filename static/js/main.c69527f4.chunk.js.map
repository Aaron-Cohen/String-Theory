{"version":3,"sources":["components/SharedComponents.js","pages/About.js","GlobalsAndContext.js","components/SubMenu.js","components/MenuData.js","components/Sidebar.js","pages/PageNotFound.js","components/Fret.js","components/FretRow.js","components/Inlay.js","components/InlayRow.js","components/Fretboard.js","pages/StringTheory.js","App.js","reportWebVitals.js","index.js"],"names":["Nut","styled","div","props","hideNut","Body","Page","GuitarRow","Text","p","Link","href","to","target","rel","style","display","color","margin","text","About","textAlign","marginBottom","mapNoteToNumber","note","trim","length","root","toUpperCase","charAt","toLowerCase","mapNumberToNote","context","shownInMenu","Error","mode","majorScale","map","offset","defaultTuning","e","validPages","GlobalContext","React","createContext","SidebarLink","SidebarPanel","DropdownLink","selected","SidebarLabel","span","Submenu","state","list","showSubNavigation","Array","this","item","subNav","fill","editable","setState","path","onClick","updateSidebar","icon","title","iconOpened","iconClosed","subItem","index","action","updateList","contentEditable","spellCheck","onBlur","currentTarget","textContent","updateTuning","onKeyDown","code","blur","Component","contextType","updateSingleItem","menuData","page","choice","updateMode","tuning","info","setTuning","input","substring","slice","selection","scale","includes","minorScale","updateNoteSet","noteSet","difference","newVals","updateRoot","setting","updateLefty","lefty","updateInlays","updateFretNumbers","newList","Nav","NavIcon","SidebarNav","nav","visible","SidebarWrap","Sidebar","useLocation","pathname","useContext","sidebar","isValidPage","showSidebar","show","Provider","value","PageNotFound","fontSize","Box","fret","Fret","FretRow","frets","i","rootNote","push","splice","reverse","Dot","padding","backgroundColor","borderRadius","Inlay","InlayRow","Board","Fretboard","overflow","marginTop","inlays","fretNumbers","StringTheory","App","stringNumber","ReactGA","initialize","pageview","window","location","search","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c69527f4.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Nut = styled.div`\r\n  background-color: ${(props) => (props.hideNut ? 'transparent;' : '#e0955c;')}\r\n  border: 3px solid #dcdcdc;\r\n  border-radius:6px;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  width: 25px;\r\n  min-width: 10px;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  display: inline;\r\n  margin-top: 15px;\r\n  font-size: 2rem;\r\n`;\r\n\r\nexport const Page = styled.div`\r\n  display: inline-flex;\r\n  margin: 3% 15% 0 20%;\r\n  justify-content: center;\r\n  align-content: center;\r\n  font-size: 3rem;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const GuitarRow = styled.div`\r\n  display: flex;\r\n  width: 75vw;\r\n  max-height: 15vh;\r\n`;\r\nexport default GuitarRow;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Body, Page} from '../components/SharedComponents';\r\n\r\nconst Text = styled.p`\r\n  margin: 33px;\r\n  line-height: 2.5rem;\r\n`;\r\n\r\nconst Link = (props) => (\r\n  <a\r\n    href={props.to}\r\n    target=\"_blank\"\r\n    rel=\"noreferrer\"\r\n    style={{display: 'inline', color: 'blue', margin: '.25em'}}\r\n  >\r\n    {props.text}\r\n  </a>\r\n);\r\n\r\nconst About = () => {\r\n  return (\r\n    <Page>\r\n      <div>\r\n        <div style={{textAlign: 'center', marginBottom: '3%'}}>\r\n          <h2 >About String Theory</h2>\r\n        </div>\r\n        <Body>\r\n          <Text>\r\n            I built this program to make alternative tunings on guitar\r\n            more accessible without needing a strong music theory background.\r\n            For more information on this topic, check out the Wikipedia page for\r\n            <Link to=\"https://en.wikipedia.org/wiki/Scordatura\" text=\"Scordatura.\" />\r\n          </Text>\r\n          <Text>\r\n            This is my first project using the React framework.\r\n            You can find the source code\r\n            <Link to=\"https://github.com/Aaron-Cohen/String-Theory\" text=\"here.\" />\r\n          </Text>\r\n          <Text>\r\n            If you have any improvements to the source code, or notice any bugs,\r\n            please send me a message on\r\n            <Link to=\"https://www.reddit.com/user/MidwestSegovia/\" text=\"Reddit\" />\r\n            or\r\n            <Link to=\"https://www.linkedin.com/in/-aaroncohen/\" text=\"LinkedIn.\" />\r\n            I love hearing feedback from users, even if it is just\r\n            that you enjoyed using String Theory. Happy strumming!\r\n          </Text>\r\n        </Body>\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\nexport default About;\r\n","import React from 'react';\r\n/*\r\n    Notes can be represented as such\r\n    0: G# / Ab\r\n    1: A\r\n    2: A# / Bb\r\n    3: B\r\n    4: C\r\n    5: C# / Db\r\n    6: D\r\n    7: D# / Eb\r\n    8: E\r\n    9: F\r\n   10: F# / Gb\r\n   11: G\r\n   12: G# / Ab <-- Octave\r\n\r\n    So there are 12 unique notes, represented by the numbers [0,11].\r\n    This allows for easy maths using the modulo operator to read a note's\r\n    profile regardless of a note's octave\r\n\r\n*/\r\n\r\n/**\r\n * Maps a letter representation of a musical note (as a String)\r\n * to a integer value. Accepts natural notes, and notes followed\r\n * by a # or b accidental for sharp and flat\r\n * resepctively.\r\n *\r\n */\r\nexport function mapNoteToNumber(note) {\r\n  note = note.trim();\r\n  // Error trap invalid input\r\n  if (typeof note !== 'string' || note.length === 0 || note.length > 2) {\r\n    return -1;\r\n  }\r\n\r\n  // Get root note before flats/sharps are applied\r\n  let root = null;\r\n  switch (note.toUpperCase().charAt(0)) {\r\n    case 'A':\r\n      root = 1;\r\n      break;\r\n    case 'B':\r\n      root = 3;\r\n      break;\r\n    case 'C':\r\n      root = 4;\r\n      break;\r\n    case 'D':\r\n      root = 6;\r\n      break;\r\n    case 'E':\r\n      root = 8;\r\n      break;\r\n    case 'F':\r\n      root = 9;\r\n      break;\r\n    case 'G':\r\n      root = 11;\r\n      break;\r\n    default:\r\n      return -2;\r\n  }\r\n\r\n  // If note contains accidental in second character, apply sharp/flat logic\r\n  if (note.length === 2) {\r\n    switch (note.toLowerCase().charAt(1)) {\r\n      case '#':\r\n      case 's':\r\n        root += 1;\r\n        break;\r\n      case 'b':\r\n        root -= 1;\r\n        break;\r\n      default:\r\n        return -3;\r\n    }\r\n  }\r\n\r\n  return root % 12;\r\n}\r\n\r\n/**\r\n * Maps a numerical representation of a musical note to a String representation\r\n * consisting of a root and an accidental of # or b if applicable for a sharp or\r\n * flat note\r\n *\r\n */\r\nexport function mapNumberToNote(note, context, shownInMenu) {\r\n  // Trap errors\r\n  if (typeof note !== 'number') {\r\n    throw new Error('Invalid input: must be number');\r\n  }\r\n\r\n  // Wrap notes around chromatic octave before continuing\r\n  note = (note + 12) % 12;\r\n\r\n  /*\r\n     Numeric mode is tricky because we want to show numbers\r\n     on the fretboard, whereas in the menu, numbers don't make\r\n     sense. However, we don't know if the user prefers sharps\r\n     or flats so we just display both if in the menu and numeric mode.\r\n\r\n     If the override is disabled and numeric mode is on,\r\n     the switch statement returns the interval from the root.\r\n\r\n     Otherwise, for sharp or flat mode, the proper accidental\r\n     is displayed\r\n  */\r\n  if (shownInMenu && context.mode === 'Numerals') {\r\n    switch (note) {\r\n      case 0:\r\n        return 'G# / Ab';\r\n      case 1:\r\n        return 'A';\r\n      case 2:\r\n        return 'A# / Bb';\r\n      case 3:\r\n        return 'B';\r\n      case 4:\r\n        return 'C';\r\n      case 5:\r\n        return 'C# / Db';\r\n      case 6:\r\n        return 'D';\r\n      case 7:\r\n        return 'D# / Eb';\r\n      case 8:\r\n        return 'E';\r\n      case 9:\r\n        return 'F';\r\n      case 10:\r\n        return 'F# / Gb';\r\n      case 11:\r\n        return 'G';\r\n      default:\r\n        throw new Error('Unable to map note to numerical value');\r\n    }\r\n  } else if (context.mode === 'Numerals') {\r\n    const interval = (note - context.root + 12) % 12;\r\n    switch (interval) {\r\n      case 0:\r\n        return '1';\r\n      case 1:\r\n        return 'b2';\r\n      case 2:\r\n        return '2';\r\n      case 3:\r\n        return 'b3';\r\n      case 4:\r\n        return '3';\r\n      case 5:\r\n        return '4';\r\n      case 6:\r\n        return 'b5';\r\n      case 7:\r\n        return '5';\r\n      case 8:\r\n        return '#5';\r\n      case 9:\r\n        return '6';\r\n      case 10:\r\n        return 'b7';\r\n      case 11:\r\n        return '7';\r\n      default:\r\n        throw new Error('Unable to map note to numerical value');\r\n    }\r\n  } else {\r\n    switch (note) {\r\n      case 0:\r\n        return context.mode === 'Flats' ? 'Ab' : 'G#';\r\n      case 1:\r\n        return 'A';\r\n      case 2:\r\n        return context.mode === 'Flats' ? 'Bb' : 'A#';\r\n      case 3:\r\n        return 'B';\r\n      case 4:\r\n        return 'C';\r\n      case 5:\r\n        return context.mode === 'Flats' ? 'Db' : 'C#';\r\n      case 6:\r\n        return 'D';\r\n      case 7:\r\n        return context.mode === 'Flats' ? 'Eb' : 'D#';\r\n      case 8:\r\n        return 'E';\r\n      case 9:\r\n        return 'F';\r\n      case 10:\r\n        return context.mode === 'Flats' ? 'Gb' : 'F#';\r\n      case 11:\r\n        return 'G';\r\n      default:\r\n        throw new Error('Unable to map note to numerical value');\r\n    }\r\n  }\r\n}\r\n\r\nexport const defaultRoot = 1; // Note = 1 = A\r\nexport const majorScale = (root) =>\r\n  [0, 2, 4, 5, 7, 9, 11].map((offset) => (offset + root) % 12);\r\nexport const minorScale = (root) =>\r\n  [0, 2, 3, 5, 7, 8, 10].map((offset) => (offset + root) % 12);\r\n\r\n// Tuning should always be calculated numerically and never lexigraphically.\r\n// This allows for dynamic switching between equivalent sharp/flats when\r\n// global context changes.\r\nexport const defaultTuningArray = ['E', 'B', 'G', 'D', 'A', 'E'];\r\nexport const defaultTuning = defaultTuningArray.map((e) => mapNoteToNumber(e));\r\n\r\n// Frets displayed, and scale factor by which they shrink in size\r\nexport const fretCount = 21;\r\nexport const shrinkFactor = 5;\r\n\r\n// So as to hide sidebar when 404'ing\r\nexport const validPages = ['/', '/About/'];\r\n\r\nexport const GlobalContext = React.createContext();\r\nexport default GlobalContext;\r\n","import {Link} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport React, {Component} from 'react';\r\nimport {GlobalContext} from '../GlobalsAndContext';\r\n\r\n// Top level item in menu\r\nconst SidebarLink = styled(Link)`\r\n  display: flex;\r\n  color: #e1e9fc;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  list-style: none;\r\n  height: 55px;\r\n  text-decoration: none;\r\n  font-size: 18px;\r\n\r\n  &:hover {\r\n    background: #252831;\r\n    border-left: 4px solid #632ce4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n// Holds secondary level choices\r\nconst SidebarPanel = styled.div`\r\n  overflow-y: auto;\r\n  max-height: 50vh;\r\n`;\r\n\r\n// Secondary level options\r\nconst DropdownLink = styled.div`\r\n  background: ${(props) => (props.selected ? '#632ce4;' : '#414757;')} \r\n  padding-left: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: #f5f5f5;\r\n  font-size: 18px;\r\n\r\n  &:hover {\r\n    background: #632ce4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n// Text for secondary level choice options\r\nconst SidebarLabel = styled.span`\r\n  margin-left: 16px;\r\n  padding: 20px;\r\n  font-size: 16: px;\r\n`;\r\n\r\nexport default class Submenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [], // Subitems to be highlighted from item prop\r\n      showSubNavigation: false, // Whether menu choice is expanded or not\r\n    };\r\n  }\r\n\r\n  // By default, highlight first option in each menu item,\r\n  // except for tuning which has isEditable === true\r\n  componentDidMount() {\r\n    const list = new Array(this.props.item.subNav.length).fill(false);\r\n    list[0] = !this.props.item.editable;\r\n    this.setState({list});\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.props;\r\n    const forceCollapseSidebar = () => this.context.updateSidebar(false);\r\n    const showSubNavigation = () => this.setState(\r\n        {showSubNavigation: !this.state.showSubNavigation},\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <SidebarLink to={item.path}\r\n          onClick={!item.path ? showSubNavigation : forceCollapseSidebar}\r\n        >\r\n          <div>\r\n            {item.icon}\r\n            <SidebarLabel>{item.title}</SidebarLabel>\r\n          </div>\r\n          <div>\r\n            {this.state.showSubNavigation ? item.iconOpened : item.iconClosed}\r\n          </div>\r\n        </SidebarLink>\r\n        <SidebarPanel>\r\n          {this.state.showSubNavigation &&\r\n            item.subNav.map((subItem, index) => (\r\n              <DropdownLink\r\n                key={index}\r\n                selected={this.state.list[index] === true}\r\n                onClick={() => {\r\n                  item.action(subItem);\r\n                  this.setState({\r\n                    list:\r\n                      item.updateList(this.state.list, index, subItem.title),\r\n                  });\r\n                }}\r\n              >\r\n                {subItem.icon}\r\n                <SidebarLabel contentEditable={item.editable} spellCheck={false}\r\n                  onBlur={(e) => {\r\n                    e.currentTarget.textContent =\r\n                      item.updateTuning(e.currentTarget.textContent, index) ||\r\n                      subItem.title;\r\n                  }}\r\n                  onKeyDown={(e) =>\r\n                    (e.code === 'Enter' || e.code === 'Tab') &&\r\n                    (e.currentTarget.blur())}\r\n                >\r\n                  {subItem.title}\r\n                </SidebarLabel>\r\n              </DropdownLink>\r\n            ))\r\n          }\r\n        </SidebarPanel>\r\n      </ >\r\n    );\r\n  }\r\n}\r\nSubmenu.contextType = GlobalContext;\r\n","import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport {GiTunePitch} from 'react-icons/gi';\r\nimport {CgTrendingDown} from 'react-icons/cg/index';\r\nimport {IoNewspaper, IoHelpCircle} from 'react-icons/io5';\r\nimport {RiArrowDownSFill, RiArrowUpSFill} from 'react-icons/ri';\r\nimport {\r\n  mapNoteToNumber, mapNumberToNote, majorScale, minorScale,\r\n} from '../GlobalsAndContext';\r\n\r\n/**\r\n  Returns a boolean array of same length as\r\n  input list containing all falses, but with\r\n  a true at index of second parameter\r\n*/\r\nfunction updateSingleItem(list, index) {\r\n  list = new Array(list.length).fill(false);\r\n  list[index] = true;\r\n  return list;\r\n}\r\n\r\nexport const menuData = (context) => [\r\n  {\r\n    title: 'Note Display Mode',\r\n    icon: <FaIcons.FaSlidersH />,\r\n    iconClosed: <RiArrowDownSFill />,\r\n    iconOpened: <RiArrowUpSFill />,\r\n    page: '/',\r\n    subNav: [\r\n      {\r\n        title: 'Sharps',\r\n        icon: <FaIcons.FaHashtag />,\r\n      },\r\n      {\r\n        title: 'Flats',\r\n        icon: <CgTrendingDown />,\r\n      },\r\n      {\r\n        title: 'Numerals',\r\n        icon: <FaIcons.FaSortNumericDown />,\r\n      },\r\n    ],\r\n    action: (choice) => context.updateMode(choice.title),\r\n    updateList: (list, index) => updateSingleItem(list, index),\r\n  },\r\n  {\r\n    title: 'Tuning Presets',\r\n    icon: <FaIcons.FaUserCog />,\r\n    iconClosed: <RiArrowDownSFill />,\r\n    iconOpened: <RiArrowUpSFill />,\r\n    page: '/',\r\n    subNav: [\r\n      {\r\n        title: 'Standard',\r\n        tuning: ['E', 'B', 'G', 'D', 'A', 'E'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'Open G',\r\n        tuning: ['D', 'B', 'G', 'D', 'G', 'D'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'Open D',\r\n        tuning: ['D', 'A', 'F#', 'D', 'A', 'D'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'Drop D',\r\n        tuning: ['E', 'B', 'G', 'D', 'A', 'D'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'Drop C',\r\n        tuning: ['E', 'B', 'G', 'D', 'A', 'C'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'E C G C A C\\n(Mumford & Sons)',\r\n        tuning: ['E', 'C', 'G', 'C', 'A', 'C'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'E C G C A F\\n(American Football)',\r\n        tuning: ['E', 'C', 'G', 'C', 'A', 'F'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'E A G C A F\\n(Yvette Young)',\r\n        tuning: ['E', 'A', 'G', 'C', 'A', 'F'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n      {\r\n        title: 'D G G D G C\\n(Adrianne Lenker)',\r\n        tuning: ['D', 'G', 'G', 'D', 'G', 'C'],\r\n        icon: <FaIcons.FaUserAlt />,\r\n      },\r\n    ],\r\n    action: (info) => context.setTuning(\r\n        info.tuning.map((e) => mapNoteToNumber(e)), // Lint required comma here\r\n    ),\r\n    updateList: (list, index) => updateSingleItem(list, index),\r\n  },\r\n  {\r\n    title: 'Custom Tuning',\r\n    icon: <FaIcons.FaGuitar />,\r\n    iconClosed: <RiArrowDownSFill />,\r\n    iconOpened: <RiArrowUpSFill />,\r\n    page: '/',\r\n    subNav: [\r\n      {\r\n        title: mapNumberToNote(context.tuning[0], context, true),\r\n        icon: <GiTunePitch />,\r\n      },\r\n      {\r\n        title: mapNumberToNote(context.tuning[1], context, true),\r\n        icon: <GiTunePitch />,\r\n      },\r\n      {\r\n        title: mapNumberToNote(context.tuning[2], context, true),\r\n        icon: <GiTunePitch />,\r\n      },\r\n      {\r\n        title: mapNumberToNote(context.tuning[3], context, true),\r\n        icon: <GiTunePitch />,\r\n      },\r\n      {\r\n        title: mapNumberToNote(context.tuning[4], context, true),\r\n        icon: <GiTunePitch />,\r\n      },\r\n      {\r\n        title: mapNumberToNote(context.tuning[5], context, true),\r\n        icon: <GiTunePitch />,\r\n      },\r\n    ],\r\n    editable: true,\r\n    action: () => { },\r\n    updateList: (list) => list,\r\n    updateTuning: (input, index) => {\r\n      input = input.trim().toLowerCase();\r\n      if (input.length < 1) return false;\r\n      if (input.length > 2) input = input.substring(0, 2);\r\n\r\n      input = input.toUpperCase().charAt(0) + input.slice(1);\r\n      const note = mapNoteToNumber(input);\r\n      if (note < 0) return false;\r\n\r\n      // Input is determined to be valid at this point.\r\n      // Must update context's tuning so fretboard can update.\r\n      context.updateTuning(index, note);\r\n      return input;\r\n    },\r\n  },\r\n  {\r\n    title: 'Pattern Type',\r\n    icon: <FaIcons.FaWrench />,\r\n    iconClosed: <RiArrowDownSFill />,\r\n    iconOpened: <RiArrowUpSFill />,\r\n    page: '/',\r\n    subNav: [\r\n      {\r\n        title: 'Natural Major',\r\n        icon: <IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Natural Minor',\r\n        icon: <IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Major Pentatonic',\r\n        icon: <IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Minor Pentatonic',\r\n        icon: <IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Major',\r\n        icon: <IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Major 7',\r\n        icon: <IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Minor',\r\n        icon: <IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Minor 7',\r\n        icon: <IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Dominant 7',\r\n        icon: <IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Augmented',\r\n        icon: <IoNewspaper />,\r\n      },\r\n      {\r\n        title: 'Diminished',\r\n        icon: <IoNewspaper />,\r\n      },\r\n    ],\r\n    action: (selection) => {\r\n      const {root} = context;\r\n      // Note that only minor chords derived from minor scale.\r\n      // Dim/Aug/Dom chords to be derived from major scale\r\n      const scale = selection.title.includes('Minor') ?\r\n          minorScale(root) : majorScale(root);\r\n\r\n      // Assemble set of notes from scale degreees\r\n      const noteSet = () => {\r\n        switch (selection.title) {\r\n          case 'Major Pentatonic':\r\n          case 'Minor Pentatonic':\r\n            // Pentatonic is scale with 4 & 7 degree's ommitted\r\n            return [scale[0], scale[1], scale[2], scale[4], scale[5]];\r\n          case 'Major':\r\n          case 'Minor':\r\n            // Major/minor chords are 1/3/5 of-0 indexed scale\r\n            return [scale[0], scale[2], scale[4]];\r\n          case 'Major 7':\r\n          case 'Minor 7':\r\n            return [scale[0], scale[2], scale[4], scale[6]];\r\n          case 'Dominant 7':\r\n            // Exploiting that dominant7 is Maj7b5 in jazz notation\r\n            return [scale[0], scale[2], scale[4], scale[6] - 1];\r\n          case 'Augmented':\r\n            return [scale[0], scale[2], scale[4] + 1];\r\n          case 'Diminished':\r\n            return [scale[0], scale[2] - 1, scale[4] - 1];\r\n          case 'Natural Major':\r\n          case 'Natural Minor':\r\n          default:\r\n            return scale;\r\n        }\r\n      };\r\n      return context.updateNoteSet( noteSet().map((e) => (e+12)%12 ) );\r\n    },\r\n    updateList: (list, index) => updateSingleItem(list, index),\r\n  },\r\n  {\r\n    title: 'Root Note / Key',\r\n    icon: <FaIcons.FaSortAlphaDown />,\r\n    iconClosed: <RiArrowDownSFill />,\r\n    iconOpened: <RiArrowUpSFill />,\r\n    page: '/',\r\n    subNav: [\r\n      {\r\n        title: 'A',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: context.mode === 'Sharps' ? 'A#' : 'Bb',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: 'B',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: 'C',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: context.mode === 'Sharps' ? 'C#' : 'Db',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: 'D',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: context.mode === 'Sharps' ? 'D#' : 'Eb',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: 'E',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: 'F',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: context.mode === 'Sharps' ? 'F#' : 'Gb',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: 'G',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n      {\r\n        title: context.mode === 'Sharps' ? 'G#' : 'Ab',\r\n        icon: <FaIcons.FaMapPin />,\r\n      },\r\n    ],\r\n    action: (root) => {\r\n      root = root.title;\r\n      // Two-part approach: update root, but also recalculate\r\n      // the selected set of notes with relation to new root\r\n      const note = mapNoteToNumber(root);\r\n      const difference = context.noteSet[0] - note;\r\n      const newVals = context.noteSet.map((e) => (e - difference + 12) % 12);\r\n\r\n      context.updateRoot(note);\r\n      context.updateNoteSet(newVals);\r\n    },\r\n    updateList: (list, index) => updateSingleItem(list, index),\r\n  },\r\n  {\r\n    title: 'Settings',\r\n    icon: <FaIcons.FaCog />,\r\n    iconClosed: <RiArrowDownSFill />,\r\n    iconOpened: <RiArrowUpSFill />,\r\n    page: '/',\r\n    subNav: [\r\n      {\r\n        title: 'Dots / Fret Numbers',\r\n        icon: <FaIcons.FaClipboardList />,\r\n      },\r\n      {\r\n        title: 'Dot Inlays',\r\n        icon: <FaIcons.FaClipboardList />,\r\n      },\r\n      {\r\n        title: 'Fret Numbers',\r\n        icon: <FaIcons.FaClipboardList />,\r\n      },\r\n      {\r\n        title: 'Nothing',\r\n        icon: <FaIcons.FaClipboardList />,\r\n      },\r\n      {\r\n        title: 'Left Handed',\r\n        icon: <FaIcons.FaClipboardList />,\r\n      },\r\n    ],\r\n    action: (setting) => {\r\n      const {title} = setting;\r\n      if (title.includes('Handed')) context.updateLefty(!context.lefty);\r\n      else {\r\n        context.updateInlays(title.includes('Dot'));\r\n        context.updateFretNumbers(title.includes('Numbers'));\r\n      }\r\n    },\r\n    updateList: (list, index, title) => {\r\n      const newList = list.slice();\r\n      // Preserve other list options if changing handed-ness setting\r\n      if (title.includes('Handed')) {\r\n        newList[index] = !list[index];\r\n      } else {\r\n        newList.fill(false);\r\n        newList[index] = true;\r\n        // Must preserve handed-ness setting when changing other options\r\n        newList[newList.length - 1] = list[list.length - 1];\r\n      }\r\n      return newList;\r\n    },\r\n  },\r\n  {\r\n    title: 'Project Info',\r\n    icon: <IoHelpCircle />,\r\n    path: '/About/',\r\n    page: '/',\r\n    subNav: [],\r\n  },\r\n  {\r\n    title: 'String Theory',\r\n    icon: <FaIcons.FaGuitar />,\r\n    path: '',\r\n    page: '/About/',\r\n    subNav: [],\r\n  },\r\n];\r\nexport default menuData;\r\n","import SubMenu from './SubMenu';\r\nimport menuData from './MenuData';\r\nimport styled from 'styled-components';\r\nimport React, {useContext} from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport {IconContext} from 'react-icons/lib';\r\nimport {Link, useLocation} from 'react-router-dom';\r\n\r\nimport GlobalContext, {validPages} from '../GlobalsAndContext';\r\n\r\n// Black bar at top of page\r\nconst Nav = styled.div`\r\n  background: #15171c;\r\n  height: max(10vh, 75px);\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\n// Icon to expand sidebar\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\n// Sidebar sliding pane\r\nconst SidebarNav = styled.nav`\r\n  background: #15171c;\r\n  width: 19rem;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: ${(props) => (props.visible ? '0' : '-100%')};\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\n// Wrapper to hold items in sidebar\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const path = useLocation().pathname;\r\n  const context = useContext(GlobalContext);\r\n  const {sidebar} = context;\r\n  const isValidPage = validPages.includes(path);\r\n  const showSidebar = (show) => context.updateSidebar(show);\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{color: '#fff'}}>\r\n        <Nav >\r\n          {isValidPage &&\r\n            <NavIcon to='#'>\r\n              <FaIcons.FaBars onClick={() => showSidebar(!sidebar)} />\r\n            </NavIcon>}\r\n        </Nav>\r\n        <SidebarNav visible={sidebar && isValidPage}>\r\n          <SidebarWrap>\r\n            <NavIcon to='#'>\r\n              <AiIcons.AiOutlineClose onClick={() => showSidebar(!sidebar)} />\r\n            </NavIcon>\r\n            {menuData(context).map((item, index) => (item.page === path) &&\r\n            <SubMenu item={item} key={index} />)}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {FaRegFrown} from 'react-icons/fa';\r\nimport {Body, Page} from '../components/SharedComponents';\r\n\r\nconst Text = styled.p`\r\n  margin: 33px;\r\n  line-height: 2.5rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst Link = (props) => (\r\n  <a\r\n    href={props.to}\r\n    style={{display: 'inline', color: 'blue', margin: '.25em'}}>\r\n    {props.text}\r\n  </a>\r\n);\r\n\r\nconst PageNotFound = () => {\r\n  return (\r\n    <Page>\r\n      <div>\r\n        <div style={{textAlign: 'center', marginBottom: '5%'}}>\r\n          <h2 >Page Not Found</h2>\r\n        </div>\r\n        <Body>\r\n          <Text>\r\n            It looks like you are trying to access a page\r\n            that does not exist. Click\r\n            <Link to=\"#/\" text=\"here\" />\r\n           to return to String Theory.\r\n          </Text>\r\n          <div style={{textAlign: 'center', fontSize: '33vh'}}>\r\n            <FaRegFrown />\r\n          </div>\r\n        </Body>\r\n      </div>\r\n    </Page >\r\n  );\r\n};\r\nexport default PageNotFound;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {shrinkFactor} from '../GlobalsAndContext';\r\n\r\nconst Box = styled.div`\r\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\r\n  background-color: ${(props) => (props.text ? '#e0ebff;' : 'transparent;')}\r\n  border-radius: 6px;\r\n  border: 3px solid #dcdcdc;\r\n  display: flex;\r\n  color: #666666;\r\n  font-family: Arial;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  height: 10vh;\r\n  min-height: 32px;\r\n  width: calc(150px - ${(props) => props.fret * shrinkFactor}px);\r\n  min-width: 30px;\r\n  text-shadow: 0px 1px 0px #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Fret = (props) => (\r\n  <Box fret={props.fret} text={props.text}>\r\n    { props.text}\r\n  </Box >\r\n);\r\nexport default Fret;\r\n\r\n","import Fret from './Fret';\r\nimport React, {useContext} from 'react';\r\nimport {GuitarRow, Nut} from './SharedComponents';\r\nimport {mapNumberToNote, fretCount, GlobalContext} from '../GlobalsAndContext';\r\n\r\nexport const FretRow = (props) => {\r\n  const context = useContext(GlobalContext);\r\n  const frets = [];\r\n  for (let i = props.rootNote; i <= fretCount + props.rootNote; i += 1) {\r\n    frets.push(\r\n        <Fret\r\n          text={context.noteSet.includes(i % 12) ?\r\n            mapNumberToNote(i, context) : ''}\r\n          fret={i - props.rootNote}\r\n        />, // Linter requires comma here\r\n    );\r\n  }\r\n\r\n  frets.splice(1, 0, <Nut />);\r\n  if (context.lefty) {\r\n    frets.reverse();\r\n  }\r\n\r\n  return (\r\n    <GuitarRow>\r\n      {frets}\r\n    </GuitarRow>\r\n  );\r\n};\r\nexport default FretRow;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {shrinkFactor} from '../GlobalsAndContext';\r\n\r\nconst Box = styled.div`\r\n  box-shadow:inset 0px 1px 0px 0px #ffffff;\r\n  background-color: transparent;\r\n  border-radius:6px;\r\n  border:3px solid #dcdcdc;\r\n  display: flex;\r\n  color:#666666;\r\n  font-family:Arial;\r\n  font-size: 12px;\r\n  font-weight:bold;\r\n  height: 5vh;\r\n  min-height: 32px;\r\n  width: calc(150px - ${(props) => props.fret * shrinkFactor}px);\r\n  min-width: 30px;\r\n  text-shadow: 0px 1px 0px #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Dot = () => (\r\n  <div style={{\r\n    padding: 4,\r\n    display: 'inline-block',\r\n    backgroundColor: 'black',\r\n    borderRadius: '50%',\r\n  }} />);\r\n\r\nexport const Inlay = (props) => {\r\n  // Case where there is text displayed and not dots\r\n  if (props.text) {\r\n    return (\r\n      <Box\r\n        fret={props.fret}\r\n        style={{fontSize: '15px'}}\r\n      >\r\n        {props.text}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Case of double dots on octave\r\n  if (props.fret === 12) {\r\n    return (<Box fret={props.fret}>\r\n      {\r\n        <div>\r\n          <div ><Dot /></div>\r\n          <div ><Dot /></div>\r\n        </div>\r\n      }\r\n    </Box >);\r\n  }\r\n\r\n  // Edge case where no dots on odd fret b/c 12th fret gets double dots\r\n  if (props.fret === 11 || props.fret === 13) {\r\n    return <Box fret={props.fret}></Box>;\r\n  }\r\n\r\n  // Case of single dots\r\n  if (props.fret % 2 && props.fret > 1) {\r\n    return <Box fret={props.fret}> <Dot /> </Box >;\r\n  }\r\n\r\n  // Case of no dots\r\n  return <Box fret={props.fret}> </Box>;\r\n};\r\nexport default Inlay;\r\n","import Inlay from './Inlay';\r\nimport React, {useContext} from 'react';\r\nimport {GuitarRow, Nut} from './SharedComponents';\r\nimport {fretCount, GlobalContext} from '../GlobalsAndContext';\r\n\r\nexport const InlayRow = (props) => {\r\n  const context = useContext(GlobalContext);\r\n  const frets = [];\r\n  for (let i = 0; i <= fretCount; i += 1) {\r\n    frets.push(<Inlay fret={i} text={props.text ? i : ''} />);\r\n  }\r\n\r\n  frets.splice(1, 0, <Nut hideNut={props.text} />);\r\n  if (context.lefty) {\r\n    frets.reverse();\r\n  }\r\n\r\n  return (\r\n    <GuitarRow>\r\n      {frets}\r\n    </GuitarRow>\r\n  );\r\n};\r\nexport default InlayRow;\r\n","import FretRow from './FretRow';\r\nimport InlayRow from './InlayRow';\r\nimport styled from 'styled-components';\r\nimport React, {useContext} from 'react';\r\nimport {GlobalContext} from '../GlobalsAndContext.js';\r\n\r\nconst Board = styled.div`\r\n  ${(props) => (props.sidebar ? 'margin-left: 22vw; ' : 'margin-left: 12.5vw;')}\r\n  margin-right: 3vw;\r\n  transition: 350ms ease;\r\n`;\r\n\r\nconst Fretboard = () => {\r\n  const context = useContext(GlobalContext);\r\n  return (\r\n    <Board sidebar={context.sidebar}>\r\n      <div style={{overflow: 'auto', marginTop: '20px'}}>\r\n        <FretRow rootNote={context.tuning[0]} />\r\n        <FretRow rootNote={context.tuning[1]} />\r\n        <FretRow rootNote={context.tuning[2]} />\r\n        {context.inlays && <InlayRow />}\r\n        <FretRow rootNote={context.tuning[3]} />\r\n        <FretRow rootNote={context.tuning[4]} />\r\n        <FretRow rootNote={context.tuning[5]} />\r\n        {context.fretNumbers && <InlayRow text={true} />}\r\n      </div>\r\n    </Board >\r\n  );\r\n};\r\nexport default Fretboard;\r\n","import React from 'react';\r\nimport Fretboard from '../components/Fretboard';\r\n\r\nexport const StringTheory = () => (<Fretboard />);\r\nexport default StringTheory;\r\n","/* eslint-disable no-invalid-this */\r\nimport './App.css';\r\nimport ReactGA from 'react-ga';\r\nimport About from './pages/About';\r\nimport React, {Component} from 'react';\r\nimport Sidebar from './components/Sidebar';\r\nimport PageNotFound from './pages/PageNotFound';\r\nimport StringTheory from './pages/StringTheory';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport {\r\n  GlobalContext,\r\n  defaultTuning,\r\n  defaultRoot,\r\n  majorScale} from './GlobalsAndContext';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    mode: 'Sharps',\r\n    root: defaultRoot,\r\n    inlays: true,\r\n    noteSet: majorScale(defaultRoot),\r\n    fretNumbers: true,\r\n    sidebar: false,\r\n    lefty: false,\r\n    tuning: defaultTuning,\r\n    updateMode: (mode) => this.setState({mode}),\r\n    updateRoot: (root) => this.setState({root}),\r\n    updateInlays: (inlays) => this.setState({inlays}),\r\n    updateNoteSet: (noteSet) => this.setState({noteSet}),\r\n    updateFretNumbers: (fretNumbers) => this.setState({fretNumbers}),\r\n    updateSidebar: (sidebar) => this.setState({sidebar}),\r\n    updateLefty: (lefty) => this.setState({lefty}),\r\n    updateTuning: (stringNumber, note) => {\r\n      const tuning = this.state.tuning.slice();\r\n      tuning[stringNumber] = note;\r\n      this.setState({tuning});\r\n    },\r\n    setTuning: (tuning) => this.setState({tuning}),\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Google analytics to track traffic\r\n    ReactGA.initialize('UA-187525938-1');\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GlobalContext.Provider value={this.state}>\r\n        <HashRouter>\r\n          <Sidebar />\r\n          <Switch>\r\n            <Route path='/' exact component={StringTheory} />\r\n            <Route path='/About/' exact component={About} />\r\n            <Route path='*' component={PageNotFound} />\r\n          </Switch>\r\n        </HashRouter>\r\n      </GlobalContext.Provider>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import './index.css';\r\nimport App from './App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}