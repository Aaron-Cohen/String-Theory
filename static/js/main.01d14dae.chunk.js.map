{"version":3,"sources":["GlobalsAndContext.js","components/SidebarData.js","components/SubMenu.js","components/Sidebar.js","components/Fret.js","components/Nut.js","components/FretRow.js","components/Inlay.js","components/InlayRow.js","components/Fretboard.js","pages/StringTheory.js","pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["mapNoteToNumber","note","trim","length","root","toUpperCase","charAt","toLowerCase","mapNumberToNote","accidental","Error","majorScale","map","offset","defaultTuningArray","defaultTuning","tuning","forEach","push","defaultTuningMap","GlobalContext","React","createContext","SidebarData","context","useContext","title","icon","iconClosed","iconOpened","page","subNav","action","choice","updateMode","updateList","list","index","updateSingleItem","mode","editable","updateTuning","input","substring","slice","info","setTuning","e","difference","noteSet","newVals","updateRoot","updateNoteSet","selection","scale","includes","minorScale","setting","updateLefty","lefty","updateInlays","updateFretNumbers","newList","fill","path","Array","SidebarLink","styled","Link","SidebarPanel","div","DropdownLink","props","selected","SidebarLabel","span","Submenu","state","showSubNavigation","this","item","setState","to","onClick","updateSidebar","subItem","contentEditable","spellCheck","onBlur","currentTarget","textContent","onKeyDown","code","blur","Component","contextType","Nav","NavIcon","SidebarNav","nav","visible","SidebarWrap","Sidebar","useLocation","pathname","sidebar","showSidebar","show","Provider","value","color","Fret","Box","fret","text","Nut","button","hideNut","FretRow","frets","i","rootNote","splice","reverse","Row","Inlay","style","fontSize","Dot","padding","display","backgroundColor","borderRadius","InlayRow","Fretboard","Board","inlays","fretNumbers","StringTheory","href","target","rel","margin","Body","Text","p","Page","About","textAlign","marginBottom","App","stringNumber","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01d14dae.chunk.js","sourcesContent":["import React from 'react';\r\n/*\r\n    Notes can be represented as such\r\n    0: G# / Ab\r\n    1: A\r\n    2: A# / Bb\r\n    3: B\r\n    4: C\r\n    5: C# / Db\r\n    6: D\r\n    7: D# / Eb\r\n    8: E\r\n    9: F\r\n   10: F# / Gb\r\n   11: G\r\n   12: G# / Ab <-- Octave\r\n\r\n    So there are 12 unique notes, represented by the numbers [0,11].\r\n    This allows for easy maths using the modulo operator to read a note's\r\n    profile regardless of a note's octave\r\n\r\n*/\r\n\r\n/**\r\n * Maps a letter representation of a musical note (as a String) to a integer value.\r\n * Accepts natural notes, and notes followed by a # or b accidental for sharp and flat\r\n * resepctively.\r\n * \r\n * @param {String} note \r\n */\r\nexport const mapNoteToNumber = (note) => {\r\n    note = note.trim();\r\n    // Error trap invalid input\r\n    if (typeof note !== 'string' || note.length === 0 || note.length > 2) {\r\n        return -1;\r\n    }\r\n\r\n    // Get root note before flats/sharps are applied\r\n    let root = null;\r\n    switch (note.toUpperCase().charAt(0)) {\r\n        case 'A':\r\n            root = 1;\r\n            break;\r\n        case 'B':\r\n            root = 3;\r\n            break;\r\n        case 'C':\r\n            root = 4;\r\n            break;\r\n        case 'D':\r\n            root = 6;\r\n            break;\r\n        case 'E':\r\n            root = 8;\r\n            break;\r\n        case 'F':\r\n            root = 9;\r\n            break;\r\n        case 'G':\r\n            root = 11;\r\n            break;\r\n        default:\r\n            return -2;\r\n    }\r\n\r\n    // If note contains accidental in second character, apply sharp/flat logic\r\n    if (note.length === 2)\r\n        switch (note.toLowerCase().charAt(1)) {\r\n            case '#':\r\n            case 's':\r\n                root += 1;\r\n                break;\r\n            case 'b':\r\n                root -= 1;\r\n                break;\r\n            default:\r\n                return -3;\r\n        }\r\n\r\n    return root % 12;\r\n}\r\n\r\n/**\r\n * Maps a numerical representation of a musical note to a String representation\r\n * consisting of a root, and an accidental of # or b if applicable for a sharp or \r\n * flat note\r\n * \r\n * @param {*} note \r\n */\r\nexport const mapNumberToNote = (note, accidental) => {\r\n    // Wrap notes around chromatic octave before continuing\r\n    note = note % 12\r\n\r\n    // Trap errors\r\n    if (typeof note !== 'number') {\r\n        throw new Error(\"Invalid input: must be number\")\r\n    }\r\n    switch (note) {\r\n        case 0:\r\n            return accidental === 'Flats' ? 'Ab' : 'G#'\r\n        case 1:\r\n            return 'A'\r\n        case 2:\r\n            return accidental === 'Flats' ? 'Bb' : 'A#'\r\n        case 3:\r\n            return 'B'\r\n        case 4:\r\n            return 'C'\r\n        case 5:\r\n            return accidental === 'Flats' ? 'Db' : 'C#'\r\n        case 6:\r\n            return 'D'\r\n        case 7:\r\n            return accidental === 'Flats' ? 'Eb' : 'D#'\r\n        case 8:\r\n            return 'E'\r\n        case 9:\r\n            return 'F'\r\n        case 10:\r\n            return accidental === 'Flats' ? 'Gb' : 'F#'\r\n        case 11:\r\n            return 'G'\r\n        default:\r\n            throw new Error(\"Unable to map note to numerical value\")\r\n    }\r\n}\r\n\r\nexport const defaultRoot = 1; // Note = 1 = A\r\nexport const majorScale = (root) => [0, 2, 4, 5, 7, 9, 11].map(offset => (offset + root) % 12);\r\nexport const minorScale = (root) => [0, 2, 3, 5, 7, 8, 10].map(offset => (offset + root) % 12);\r\nexport const defaultTuningArray = ['E', 'B', 'G', 'D', 'A', 'E']\r\n// Tuning should always be expressed numerically and never lexigraphically.\r\n// This allows for dynamic switching between equivalent sharp/flats when\r\n// global context changes.\r\nconst defaultTuningMap = () => {\r\n    const tuning = [];\r\n    defaultTuningArray.forEach(note => {\r\n        tuning.push(mapNoteToNumber(note));\r\n    })\r\n    return tuning;\r\n}\r\nexport const fretCount = 21;\r\nexport const defaultTuning = defaultTuningMap();\r\nexport const GlobalContext = React.createContext();\r\nexport default GlobalContext;","import React, { useContext } from 'react';\r\nimport { GlobalContext, mapNoteToNumber, mapNumberToNote, majorScale, minorScale } from '../GlobalsAndContext'\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as IoIcons from 'react-icons/io5';\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as GiIcons from 'react-icons/gi';\r\nimport * as CgIcons from 'react-icons/cg';\r\n\r\nexport const SidebarData = () => {\r\n  const context = useContext(GlobalContext)\r\n  return [\r\n    {\r\n      title: 'Sharp/Flat Mode',\r\n      icon: <FaIcons.FaSlidersH />,\r\n      iconClosed: <RiIcons.RiArrowDownSFill />,\r\n      iconOpened: <RiIcons.RiArrowUpSFill />,\r\n      page: '/StringTheory',\r\n      subNav: [\r\n        {\r\n          title: 'Sharps',\r\n          icon: <FaIcons.FaHashtag />,\r\n        },\r\n        {\r\n          title: 'Flats',\r\n          icon: <CgIcons.CgTrendingDown />,\r\n        }\r\n      ],\r\n      action: (choice) => context.updateMode(choice.title),\r\n      updateList: (list, index) => updateSingleItem(list, index)\r\n    },\r\n    {\r\n      title: 'Custom Tuning',\r\n      icon: <FaIcons.FaGuitar />,\r\n      iconClosed: <RiIcons.RiArrowDownSFill />,\r\n      iconOpened: <RiIcons.RiArrowUpSFill />,\r\n      page: '/StringTheory',\r\n      subNav: [\r\n        {\r\n          title: mapNumberToNote(context.tuning[0], context.mode),\r\n          icon: <GiIcons.GiTunePitch />,\r\n          iconClosed: <RiIcons.RiArrowDownSFill />,\r\n          iconOpened: <RiIcons.RiArrowUpSFill />,\r\n          subNav: [\r\n            {\r\n              title: 'inner level',\r\n              icon: <FaIcons.FaGuitar />\r\n            },\r\n            {\r\n              title: 'inner level',\r\n              icon: <FaIcons.FaGuitar />\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          title: mapNumberToNote(context.tuning[1], context.mode),\r\n          icon: <GiIcons.GiTunePitch />\r\n        },\r\n        {\r\n          title: mapNumberToNote(context.tuning[2], context.mode),\r\n          icon: <GiIcons.GiTunePitch />\r\n        },\r\n        {\r\n          title: mapNumberToNote(context.tuning[3], context.mode),\r\n          icon: <GiIcons.GiTunePitch />\r\n        },\r\n        {\r\n          title: mapNumberToNote(context.tuning[4], context.mode),\r\n          icon: <GiIcons.GiTunePitch />\r\n        },\r\n        {\r\n          title: mapNumberToNote(context.tuning[5], context.mode),\r\n          icon: <GiIcons.GiTunePitch />\r\n        }\r\n      ],\r\n      editable: true,\r\n      action: () => { },\r\n      updateList: (list) => list,\r\n      updateTuning: (input, index) => {\r\n        input = input.trim().toLowerCase();\r\n        if (input.length < 1)\r\n          return false;\r\n        if (input.length > 2)\r\n          input = input.substring(0, 2);\r\n\r\n        input = input.toUpperCase().charAt(0) + input.slice(1);\r\n        const note = mapNoteToNumber(input)\r\n        if (note < 0)\r\n          return false;\r\n\r\n        // Input is determined to be valid at this point.\r\n        // Must update context's tuning so fretboard can update.\r\n        context.updateTuning(index, note);\r\n        return input;\r\n      }\r\n    },\r\n    {\r\n      title: 'Tuning Presets',\r\n      icon: <FaIcons.FaUserCog />,\r\n      iconClosed: <RiIcons.RiArrowDownSFill />,\r\n      iconOpened: <RiIcons.RiArrowUpSFill />,\r\n      page: '/StringTheory',\r\n      subNav: [\r\n        {\r\n          title: 'Standard',\r\n          tuning: ['E', 'B', 'G', 'D', 'A', 'E'],\r\n          icon: <FaIcons.FaUserAlt />\r\n        },\r\n        {\r\n          title: 'Open G',\r\n          tuning: ['D', 'B', 'G', 'D', 'G', 'D'],\r\n          icon: <FaIcons.FaUserAlt />\r\n        },\r\n        {\r\n          title: 'Open D',\r\n          tuning: ['D', 'A', 'F#', 'D', 'A', 'D'],\r\n          icon: <FaIcons.FaUserAlt />\r\n        },\r\n        {\r\n          title: 'Drop D',\r\n          tuning: ['E', 'B', 'G', 'D', 'A', 'D'],\r\n          icon: <FaIcons.FaUserAlt />\r\n        },\r\n        {\r\n          title: 'Drop C',\r\n          tuning: ['E', 'B', 'G', 'D', 'A', 'C'],\r\n          icon: <FaIcons.FaUserAlt />\r\n        },\r\n        {\r\n          title: 'E C G C A C\\n(Mumford & Sons)',\r\n          tuning: ['E', 'C', 'G', 'C', 'A', 'C'],\r\n          icon: <FaIcons.FaUserAlt />\r\n        },\r\n        {\r\n          title: 'E C G C A F\\n(American Football)',\r\n          tuning: ['E', 'C', 'G', 'C', 'A', 'F'],\r\n          icon: <FaIcons.FaUserAlt />\r\n        },\r\n        {\r\n          title: 'E A G C A F\\n(Yvette Young)',\r\n          tuning: ['E', 'A', 'G', 'C', 'A', 'F'],\r\n          icon: <FaIcons.FaUserAlt />\r\n        },\r\n      ],\r\n      action: (info) => context.setTuning(info.tuning.map(e => mapNoteToNumber(e))),\r\n      updateList: (list, index) => updateSingleItem(list, index)\r\n    },\r\n    {\r\n      title: 'Root Note / Key',\r\n      icon: <FaIcons.FaSortAlphaDown />,\r\n      iconClosed: <RiIcons.RiArrowDownSFill />,\r\n      iconOpened: <RiIcons.RiArrowUpSFill />,\r\n      page: '/StringTheory',\r\n      subNav: [\r\n        {\r\n          title: 'A',\r\n          icon: <FaIcons.FaMapPin />\r\n        },\r\n        {\r\n          title: context.mode === 'Sharps' ? 'A#' : 'Bb',\r\n          icon: <FaIcons.FaMapPin />\r\n        },\r\n        {\r\n          title: 'B',\r\n          icon: <FaIcons.FaMapPin />\r\n        },\r\n        {\r\n          title: 'C',\r\n          icon: <FaIcons.FaMapPin />\r\n        },\r\n        {\r\n          title: context.mode === 'Sharps' ? 'C#' : 'Db',\r\n          icon: <FaIcons.FaMapPin />\r\n        },\r\n        {\r\n          title: 'D',\r\n          icon: <FaIcons.FaMapPin />\r\n        },\r\n        {\r\n          title: context.mode === 'Sharps' ? 'D#' : 'Eb',\r\n          icon: <FaIcons.FaMapPin />\r\n        },\r\n        {\r\n          title: 'E',\r\n          icon: <FaIcons.FaMapPin />\r\n        },\r\n        {\r\n          title: 'F',\r\n          icon: <FaIcons.FaMapPin />\r\n        },\r\n        {\r\n          title: context.mode === 'Sharps' ? 'F#' : 'Gb',\r\n          icon: <FaIcons.FaMapPin />\r\n        },\r\n        {\r\n          title: 'G',\r\n          icon: <FaIcons.FaMapPin />\r\n        },\r\n        {\r\n          title: context.mode === 'Sharps' ? 'G#' : 'Ab',\r\n          icon: <FaIcons.FaMapPin />\r\n        }\r\n      ],\r\n      action: (root) => {\r\n        root = root.title;\r\n        // Two-part approach: update root, but also recalculate\r\n        // the selected set of notes with relation to new root\r\n        const note = mapNoteToNumber(root);\r\n        let difference = context.noteSet[0] - note;\r\n        const newVals = context.noteSet.map(e => (e - difference + 12) % 12);\r\n\r\n        context.updateRoot(note);\r\n        context.updateNoteSet(newVals)\r\n      },\r\n      updateList: (list, index) => updateSingleItem(list, index)\r\n    },\r\n    {\r\n      title: 'Pattern Type',\r\n      icon: <FaIcons.FaWrench />,\r\n      iconClosed: <RiIcons.RiArrowDownSFill />,\r\n      iconOpened: <RiIcons.RiArrowUpSFill />,\r\n      page: '/StringTheory',\r\n      subNav: [\r\n        {\r\n          title: 'Natural Major',\r\n          icon: <IoIcons.IoNewspaper />,\r\n        },\r\n        {\r\n          title: 'Natural Minor',\r\n          icon: <IoIcons.IoNewspaper />,\r\n        },\r\n        {\r\n          title: 'Major Pentatonic',\r\n          icon: <IoIcons.IoNewspaper />,\r\n        },\r\n        {\r\n          title: 'Minor Pentatonic',\r\n          icon: <IoIcons.IoNewspaper />,\r\n        },\r\n        {\r\n          title: 'Major',\r\n          icon: <IoIcons.IoNewspaper />,\r\n        },\r\n        {\r\n          title: 'Major 7',\r\n          icon: <IoIcons.IoNewspaper />,\r\n        },\r\n        {\r\n          title: 'Minor',\r\n          icon: <IoIcons.IoNewspaper />,\r\n        },\r\n        {\r\n          title: 'Minor 7',\r\n          icon: <IoIcons.IoNewspaper />,\r\n        },\r\n        {\r\n          title: 'Dominant 7',\r\n          icon: <IoIcons.IoNewspaper />,\r\n        },\r\n        {\r\n          title: 'Augmented',\r\n          icon: <IoIcons.IoNewspaper />,\r\n        },\r\n        {\r\n          title: 'Diminished',\r\n          icon: <IoIcons.IoNewspaper />,\r\n        }\r\n      ],\r\n      action: (selection) => {\r\n        const { root } = context;\r\n        // Note that only minor chords derived from minor scale. Dim/Aug/Dom chords to be derived from major scale\r\n        const scale = selection.title.includes('Minor') ? minorScale(root) : majorScale(root);\r\n\r\n        // Assemble set of notes from scale degreees\r\n        const noteSet = () => {\r\n          switch (selection.title) {\r\n            case 'Major Pentatonic':\r\n            case 'Minor Pentatonic':\r\n              return [scale[0], scale[1], scale[2], scale[4], scale[5]]; // Pentatonic is scale with 4 & 7 degree's ommitted\r\n            case 'Major':\r\n            case 'Minor':\r\n              return [scale[0], scale[2], scale[4]]; // Major/minor chords are 1/3/5 of-0 indexed scale\r\n            case 'Major 7':\r\n            case 'Minor 7':\r\n              return [scale[0], scale[2], scale[4], scale[6]]; // Major/minor 7 chords are 1/3/5/7 of-0 indexed scale\r\n            case 'Dominant 7':\r\n              return [scale[0], scale[2], scale[4], scale[6] - 1]; // Exploiting that dominant7 is Maj7b5 in jazz notation\r\n            case 'Augmented':\r\n              return [scale[0], scale[2], scale[4] + 1] // Augmented implies sharp fifth\r\n            case 'Diminished':\r\n              return [scale[0], scale[2] - 1, scale[4] - 1] // Augmented implies flat third, fifth\r\n            case 'Natural Major':\r\n            case 'Natural Minor':\r\n            default:\r\n              return scale;\r\n          }\r\n        }\r\n        return context.updateNoteSet(noteSet());\r\n      },\r\n      updateList: (list, index) => updateSingleItem(list, index)\r\n    },\r\n    {\r\n      title: 'Settings',\r\n      icon: <FaIcons.FaCog />,\r\n      iconClosed: <RiIcons.RiArrowDownSFill />,\r\n      iconOpened: <RiIcons.RiArrowUpSFill />,\r\n      page: '/StringTheory',\r\n      subNav: [\r\n        {\r\n          title: 'Dots / Fret Numbers',\r\n          icon: <FaIcons.FaClipboardList />\r\n        },\r\n        {\r\n          title: 'Dot Inlays',\r\n          icon: <FaIcons.FaClipboardList />\r\n        },\r\n        {\r\n          title: 'Fret Numbers',\r\n          icon: <FaIcons.FaClipboardList />\r\n        },\r\n        {\r\n          title: 'Nothing',\r\n          icon: <FaIcons.FaClipboardList />\r\n        },\r\n        {\r\n          title: 'Left Handed',\r\n          icon: <FaIcons.FaClipboardList />,\r\n        }\r\n      ],\r\n      action: (setting) => {\r\n        const { title } = setting;\r\n        if (title.includes('Handed'))\r\n          context.updateLefty(!context.lefty);\r\n        else {\r\n          context.updateInlays(title.includes('Dot'));\r\n          context.updateFretNumbers(title.includes('Numbers'));\r\n        }\r\n      },\r\n      updateList: (list, index, title) => {\r\n        const newList = list.slice();\r\n        // Preserve other list options if changing handed-ness setting\r\n        if (title.includes('Handed')) {\r\n          newList[index] = !list[index];\r\n        }\r\n        else {\r\n          newList.fill(false);\r\n          newList[index] = true;\r\n          // Must preserve handed-ness setting when changing other options\r\n          newList[newList.length - 1] = list[list.length - 1]\r\n        }\r\n        return newList;\r\n      }\r\n    },\r\n    {\r\n      title: 'Project Info',\r\n      icon: <IoIcons.IoHelpCircle />,\r\n      path: '/About',\r\n      page: '/StringTheory',\r\n      subNav: []\r\n    },\r\n    {\r\n      title: 'String Theory',\r\n      icon: <FaIcons.FaGuitar />,\r\n      path: '/StringTheory',\r\n      page: '/About',\r\n      subNav: []\r\n    }\r\n  ]\r\n};\r\n\r\n/**\r\n  Returns a boolean array of same length as\r\n  input list containing all falses, but with\r\n  a true at index of second parameter\r\n*/\r\nconst updateSingleItem = (list, index) => {\r\n  list = new Array(list.length).fill(false);\r\n  list[index] = true;\r\n  return list;\r\n}","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { GlobalContext } from '../GlobalsAndContext'\r\n\r\n// Top level item in menu\r\nconst SidebarLink = styled(Link)`\r\n  display: flex;\r\n  color: #e1e9fc;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  list-style: none;\r\n  height: 55px;\r\n  text-decoration: none;\r\n  font-size: 18px;\r\n\r\n  &:hover {\r\n    background: #252831;\r\n    border-left: 4px solid #632ce4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n// Holds secondary level choices\r\nconst SidebarPanel = styled.div`\r\n  overflow-y: auto;\r\n  max-height: 50vh;\r\n`;\r\n\r\n// Secondary level options\r\nconst DropdownLink = styled.div`\r\n  background: ${props => (props.selected ? '#632ce4;' : '#414757;')} \r\n  padding-left: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: #f5f5f5;\r\n  font-size: 18px;\r\n\r\n  &:hover {\r\n    background: #632ce4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n// Text for secondary level choice options\r\nconst SidebarLabel = styled.span`\r\n  margin-left: 16px;\r\n  padding: 20px;\r\n  font-size: 16: px;\r\n`;\r\n\r\nexport default class Submenu extends Component {\r\n  constructor(props) {\r\n    super(props);               // Prop of item holds top level menu choice. Defined in SidebarData.js\r\n    this.state = {\r\n      list: [],                 // Subitems to be highlighted from item prop\r\n      showSubNavigation: false  // Whether menu choice is expanded or not\r\n    }\r\n  }\r\n\r\n  // By default, highlight first option in each menu item, except for tuning which has isEditable === true\r\n  componentDidMount() {\r\n    let list = new Array(this.props.item.subNav.length).fill(false);\r\n    list[0] = !this.props.item.editable;\r\n    this.setState({ list })\r\n  }\r\n\r\n  render() {\r\n    const item = this.props.item;\r\n    const forceCollapseSidebar = () => this.context.updateSidebar(false)\r\n    const showSubNavigation = () => this.setState({ showSubNavigation: !this.state.showSubNavigation });\r\n\r\n    return (\r\n      <>\r\n        <SidebarLink to={item.path} onClick={!item.path ? showSubNavigation : forceCollapseSidebar}>\r\n          <div>\r\n            {item.icon}\r\n            <SidebarLabel>{item.title}</SidebarLabel>\r\n          </div>\r\n          <div>\r\n            {this.state.showSubNavigation ? item.iconOpened : item.iconClosed}\r\n          </div>\r\n        </SidebarLink>\r\n        <SidebarPanel>\r\n          {this.state.showSubNavigation &&\r\n            item.subNav.map((subItem, index) => {\r\n              return (\r\n                <DropdownLink key={index} selected={this.state.list[index] === true}\r\n                  onClick={() => {\r\n                    item.action(subItem); // Each menu item has a custom action associated with, and updates\r\n                    this.setState({       // how its choices are selected and colored differently. \r\n                      list:\r\n                        item.updateList(this.state.list, index, subItem.title)\r\n                    })\r\n                  }}\r\n                >\r\n                  {subItem.icon}\r\n                  <SidebarLabel contentEditable={item.editable} spellCheck={false}\r\n                    onBlur={(e) => {\r\n                      e.currentTarget.textContent =\r\n                        item.updateTuning(e.currentTarget.textContent, index) || subItem.title;\r\n                    }}\r\n                    onKeyDown={(e) => (e.code === 'Enter' || e.code === 'Tab') && (e.currentTarget.blur())}\r\n                  >\r\n                    {subItem.title}\r\n                  </SidebarLabel>\r\n                </DropdownLink>\r\n              );\r\n            })\r\n          }\r\n        </SidebarPanel>\r\n      </ >\r\n    )\r\n  }\r\n}\r\nSubmenu.contextType = GlobalContext","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { SidebarData } from './SidebarData';\r\nimport SubMenu from './SubMenu';\r\nimport { IconContext } from 'react-icons/lib';\r\n\r\nimport { useLocation } from 'react-router-dom'\r\nimport GlobalContext from '../GlobalsAndContext';\r\n\r\nconst Nav = styled.div`\r\n  background: #15171c;\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #15171c;\r\n  min-width: 20vw;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: ${props => (props.visible ? '0' : '-100%')};\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const path = useLocation().pathname;\r\n  const context = useContext(GlobalContext);\r\n  const sidebar = context.sidebar;\r\n  const showSidebar = (show) => context.updateSidebar(show);\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: '#fff' }}>\r\n        <Nav>\r\n          <NavIcon to='#'>\r\n            <FaIcons.FaBars onClick={() => showSidebar(!sidebar)} />\r\n          </NavIcon>\r\n        </Nav>\r\n        <SidebarNav visible={sidebar}>\r\n          <SidebarWrap>\r\n            <NavIcon to='#'>\r\n              <AiIcons.AiOutlineClose onClick={() => showSidebar(!sidebar)} />\r\n            </NavIcon>\r\n            {SidebarData().map((item, index) => {\r\n              return (item.page === path) && <SubMenu item={item} key={index} />;\r\n            })}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Fret = (props) => (<Box fret={props.fret} text={props.text}> { props.text}</Box >)\r\nexport default Fret;\r\n\r\nconst Box = styled.div`\r\n    box-shadow: inset 0px 1px 0px 0px #ffffff;\r\n\tbackground-color: ${props => props.text ? '#e0ebff;' : 'transparent;'}\r\n\tborder-radius: 6px;\r\n\tborder: 3px solid #dcdcdc;\r\n\tdisplay: flex;\r\n\tcolor: #666666;\r\n\tfont-family: Arial;\r\n\tfont-size: 15px;\r\n    font-weight: bold;\r\n    height: 10vh;\r\n    width: ${props => (101 - props.fret * 3 + 'vw')};\r\n    minWidth: 2ch;\r\n\ttext-shadow: 0px 1px 0px #ffffff;\r\n\tdisplay: flex;\r\n  \tjustify-content: center;\r\n \talign-items: center;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Nut = styled.button`\r\n\tbackground-color: ${props => props.hideNut ? 'transparent;' : '#e0955c;'}\r\n    border: 3px solid #dcdcdc;\r\n    border-radius:6px;\r\n\tfont-size: 15px;\r\n    font-weight: bold;\r\n    width: 25%;\r\n`;\r\nexport default Nut;","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { fretCount, GlobalContext } from '../GlobalsAndContext.js';\r\nimport Fret from './Fret.js'\r\nimport Nut from './Nut.js'\r\nimport { mapNumberToNote } from '../GlobalsAndContext.js'\r\n\r\nexport const FretRow = (props) => {\r\n    const context = useContext(GlobalContext);\r\n    const frets = [];\r\n    for (let i = props.rootNote; i <= fretCount + props.rootNote; i++)\r\n        frets.push(<Fret text={context.noteSet.includes(i % 12) ? mapNumberToNote(i, context.mode) : ''} fret={i - props.rootNote} />);\r\n\r\n    frets.splice(1, 0, <Nut />)\r\n    if (context.lefty)\r\n        frets.reverse();\r\n\r\n    return (\r\n        <Row>\r\n            {frets}\r\n        </Row>\r\n    )\r\n}\r\nexport default FretRow;\r\n\r\nconst Row = styled.div`\r\n  display: flex; \r\n  margin: auto;\r\n  width: 75vw;\r\n  max-height: 15vh;\r\n  overflow: hidden;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Inlay = (props) => {\r\n    // Case where there is text displayed and not dots \r\n    if (props.text)\r\n        return <Box fret={props.fret} style={{ fontSize: '15px' }}> {props.text} </Box>\r\n\r\n    // Case of double dots on octave\r\n    if (props.fret === 12)\r\n        return (<Box fret={props.fret}>\r\n            {\r\n                <div>\r\n                    <div ><Dot /></div>\r\n                    <div ><Dot /></div>\r\n                </div>\r\n            }\r\n        </Box >)\r\n\r\n    // Edge case where no dots on odd fret b/c 12th fret gets double dots\r\n    else if (props.fret === 11 || props.fret === 13)\r\n        return <Box fret={props.fret}></Box>\r\n\r\n    // Case of single dots\r\n    else if (props.fret % 2 && props.fret > 1)\r\n        return (<Box fret={props.fret}> <Dot /> </Box >)\r\n\r\n    // Case of no dots\r\n    else\r\n        return <Box fret={props.fret}> </Box>\r\n}\r\nexport default Inlay;\r\n\r\n// This will not function as a styled component as it is empty, but will work as a stateless component\r\nconst Dot = () => (\r\n    <div style={{\r\n        padding: 4,\r\n        display: \"inline-block\",\r\n        backgroundColor: \"black\",\r\n        borderRadius: \"50%\",\r\n    }} />);\r\n\r\nconst Box = styled.div`\r\n    box-shadow:inset 0px 1px 0px 0px #ffffff;\r\n\tbackground-color: transparent;\r\n\tborder-radius:6px;\r\n\tborder:3px solid #dcdcdc;\r\n\tdisplay: flex;\r\n\tcolor:#666666;\r\n\tfont-family:Arial;\r\n\tfont-size: 12px;\r\n    font-weight:bold;\r\n    height: 5vh;\r\n    width: ${props => (101 - props.fret * 3 + 'vw')};\r\n    minWidth: 2ch;\r\n    overflow:\r\n    text-shadow:0px 1px 0px #ffffff;\r\n    display: flex;\r\n  \tjustify-content: center;\r\n \talign-items: center;\r\n`;","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Inlay from './Inlay.js'\r\nimport Nut from './Nut'\r\nimport { fretCount, GlobalContext } from '../GlobalsAndContext.js'\r\n\r\nexport const InlayRow = (props) => {\r\n    const context = useContext(GlobalContext);\r\n    const frets = [];\r\n    for (let i = 0; i <= fretCount; i++)\r\n        frets.push(<Inlay fret={i} text={props.text ? i : ''} />);\r\n\r\n    frets.splice(1, 0, <Nut hideNut={props.text} />);\r\n    if (context.lefty)\r\n        frets.reverse();\r\n\r\n    return (\r\n        <Row>\r\n            {frets}\r\n        </Row>\r\n    );\r\n}\r\nexport default InlayRow;\r\n\r\nconst Row = styled.div`\r\n  display: flex; \r\n  margin: auto;\r\n  width: 75vw;\r\n  max-height: 15vh;\r\n  overflow: hidden;\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport FretRow from './FretRow';\r\nimport InlayRow from './InlayRow';\r\nimport styled from 'styled-components';\r\nimport { GlobalContext } from '../GlobalsAndContext.js';\r\n\r\nconst Fretboard = () => {\r\n  const context = useContext(GlobalContext);\r\n  return (\r\n    <Board sidebar={context.sidebar}>\r\n      <br />\r\n      <FretRow rootNote={context.tuning[0]} />\r\n      <FretRow rootNote={context.tuning[1]} />\r\n      <FretRow rootNote={context.tuning[2]} />\r\n      { context.inlays && <InlayRow />}\r\n      <FretRow rootNote={context.tuning[3]} />\r\n      <FretRow rootNote={context.tuning[4]} />\r\n      <FretRow rootNote={context.tuning[5]} />\r\n      { context.fretNumbers && <InlayRow text={true} />}\r\n    </Board>\r\n  )\r\n}\r\nexport default Fretboard;\r\n\r\nconst Board = styled.div`\r\n  ${props => props.sidebar && `margin-left: 17vw`};\r\n  transition: 350ms ease;\r\n`;","import React from 'react';\r\nimport Fretboard from '../components/Fretboard';\r\n\r\nexport const StringTheory = () => (<Fretboard />)\r\nexport default StringTheory;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst About = () => {\r\n  return (\r\n    <Page>\r\n      <div>\r\n        <div style={{ textAlign: 'center', marginBottom: '5%' }}>\r\n          <h2 >About String Theory</h2>\r\n        </div>\r\n        <Body>\r\n          <Text>\r\n            I built this program to make alternative tunings on guitar\r\n            more accessible without needing a strong music theory background.\r\n            For more information, check out the Wikipedia page for\r\n              <Link to=\"https://en.wikipedia.org/wiki/Scordatura\" text=\"Scordatura.\" />\r\n          </Text>\r\n          <Text>\r\n            This is my first project using the React framework. You can find the source code\r\n              <Link to=\"https://github.com/Aaron-Cohen/StringTheory\" text=\"here.\" />\r\n            If you have any improvements to the source code, or notice any bugs, please reach out to me on my\r\n            <Link to=\"https://www.linkedin.com/in/-aaroncohen/\" text=\"LinkedIn.\" />\r\n          </Text>\r\n          <Text>\r\n            Thank you for using String Theory. Happy strumming!\r\n          </Text>\r\n        </Body>\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst Link = (props) => (\r\n  <a href={props.to} target=\"_blank\" rel=\"noreferrer\" style={{ display: 'inline', color: 'blue', margin: '.25em' }}>\r\n    {props.text}\r\n  </a>\r\n)\r\n\r\nconst Body = styled.div`\r\n  display: inline;\r\n  margin-top: 15px;\r\n  font-size: 2rem;\r\n`\r\n\r\nconst Text = styled.p`\r\n  margin: 33px;\r\n  line-height: 2.5rem;\r\n`\r\n\r\nconst Page = styled.div`\r\n  display: inline-flex;\r\n  margin: 4% 15% 5% 20%;\r\n  justify-content: center;\r\n  align-content: center;\r\n  font-size: 3rem;\r\n  overflow: hidden;\r\n`\r\n\r\nexport default About;\r\n","import './App.css';\r\nimport Sidebar from './components/Sidebar';\r\nimport React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport StringTheory from './pages/StringTheory';\r\nimport About from './pages/About';\r\nimport { GlobalContext, defaultTuning, defaultRoot, majorScale } from './GlobalsAndContext'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    mode: 'Sharps',\r\n    root: defaultRoot,\r\n    inlays: true,\r\n    noteSet: majorScale(defaultRoot),\r\n    fretNumbers: true,\r\n    sidebar: false,\r\n    lefty: false,\r\n    tuning: defaultTuning,\r\n    updateMode: (mode) => this.setState({ mode }),\r\n    updateRoot: (root) => this.setState({ root }),\r\n    updateInlays: (inlays) => this.setState({ inlays }),\r\n    updateNoteSet: (noteSet) => this.setState({ noteSet }),\r\n    updateFretNumbers: (fretNumbers) => this.setState({ fretNumbers }),\r\n    updateSidebar: (sidebar) => this.setState({ sidebar }),\r\n    updateLefty: (lefty) => this.setState({ lefty }),\r\n    updateTuning: (stringNumber, note) => {\r\n      const tuning = this.state.tuning.slice();\r\n      tuning[stringNumber] = note;\r\n      this.setState({ tuning });\r\n    },\r\n    setTuning: (tuning) => this.setState({ tuning })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GlobalContext.Provider value={this.state}>\r\n        <Router>\r\n          <Sidebar />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/String-Theory\" />\r\n            </Route>\r\n            <Route path='/String-Theory' exact component={StringTheory} />\r\n            <Route path='/About' exact component={About} />\r\n          </Switch>\r\n        </Router>\r\n      </GlobalContext.Provider>\r\n    )\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}